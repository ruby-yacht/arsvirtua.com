
YTo5OntzOjU6InRpdGxlIjtzOjA6IiI7czoxMToiZGVzY3JpcHRpb24iO3M6MDoiIjtzOjc6ImtleXdvcmQiO3M6MTk6InByb2Zlc3Npb25hbCB2aWFncmEiO3M6NjoiSURwYWNrIjtzOjM6IjE4NiI7czo0OiJiYXNlIjtzOjY6InZpYWdyYSI7czo2OiJpc2Rvb3IiO2k6MTtzOjEyOiJpbnNpZGVfbGlua3MiO2E6MDp7fXM6NDoidGV4dCI7czowOiIiO3M6MjoibnIiO2E6MTA6e3M6NzoiJXRpdGxlJSI7czo4NzoiUHJvZmVzc2lvbmFsIHZpYWdyYSwgRGlzY291bnQgdmlhZ3JhIGNhbmFkYSAtIEFyc3ZpcnR1YSBPbmxpbmUgRHJ1ZyBTdG9yZS4gQmVzdCBQcmljZXMhIjtzOjEzOiIlZGVzY3JpcHRpb24lIjtzOjE0MzoiUGhhcm1hY3kgR3VhcmFudGVlZCAtIFF1YWxpdHkgUHJvdGVjdHMhIFdlIHNoaXAgd2l0aCBFTVMsIEZlZEV4LCBVUFMsIGFuZCBvdGhlciEgRkRBIGFwcHJvdmVkIEhlYWx0aCBwcm9kdWN0ISBPbmx5IHRvZGF5IC0gdmlhZ3JhIGxvd2VzdCBwcmljZSEiO3M6MTE6IiV1Y2tleXdvcmQlIjtzOjE5OiJQcm9mZXNzaW9uYWwgVmlhZ3JhIjtzOjk6IiVrZXl3b3JkJSI7czoxOToicHJvZmVzc2lvbmFsLHZpYWdyYSI7czoxNToiJUlOU0lERV9MSU5LXzAlIjtzOjY1OiI8YSBocmVmPSJodHRwOi8vd3d3LmFyc3ZpcnR1YS5jb20vIj5wZml6ZXIgdmlhZ3JhIDEwMG1nIHdvbWVuPC9hPiI7czoxNToiJUlOU0lERV9MSU5LXzElIjtzOjgxOiI8YSBocmVmPSJodHRwOi8vYXJzdmlydHVhLmNvbS9jaWFsaXMtb25saW5lLXB1cmNoYXNlLyI+Y2lhbGlzIG9ubGluZSBwdXJjaGFzZTwvYT4iO3M6MTU6IiVJTlNJREVfTElOS18yJSI7czo2NzoiPGEgaHJlZj0iaHR0cDovL2Fyc3ZpcnR1YS5jb20vdmVudGEtZGUtY2lhbGlzLyI+dmVudGEgZGUgY2lhbGlzPC9hPiI7czoxNToiJUlOU0lERV9MSU5LXzMlIjtzOjY0OiI8YSBocmVmPSJodHRwOi8vYXJzdmlydHVhLmNvbS9wcm9qZWN0cy90cmlidXRlLyI+dmlhZ3JhIHZpc2E8L2E+IjtzOjE1OiIlSU5TSURFX0xJTktfNCUiO3M6ODI6IjxhIGhyZWY9Imh0dHA6Ly93d3cuYXJzdmlydHVhLmNvbS9ndWlsZCI+Z2VuZXJpYyB2aWFncmEgbm8gcHJlc2NyaXB0aW9uIGNhbmFkYTwvYT4iO3M6NjoiJXRleHQlIjtzOjE2MjM4OiI8aDM+IDxoMT5Qcm9mZXNzaW9uYWwgdmlhZ3JhLCBEaXNjb3VudCB2aWFncmEgY2FuYWRhPC9oMT48aDI+Q2FuYWRpYW4gcGhhcm1hY3kgdmlhZ3JhIHJlY2h0bGljaGVuPC9oMj48ZGl2PldvdWxkIHlvdSBhZGQgc29tZSAidHVyYm8tY2hhcmdlZCIgY2hvY29sYXRlIHRvIGEgZGF0ZSBuaWdodD8gV3JpZ2xleSdzLCB0aGUgbWFrZXIncyBvZiBCaWcgUmVkIGFuZCBKdWljeSBGcnVpdCwgYXJlIHRha2luZyBvbiBhIHdob2xlIG5ldyBwcm9kdWN0IGxpbmUuIFRoZSBndWlkZWxpbmVzIHNheSB0aGF0IGFkdWx0cyBzaG91bGQgZ2V0IDMwIG1pbnV0ZXMgb2YgZXhlcmNpc2UgcGVyIGRheSwgZml2ZSBvciBtb3JlIGRheXMgcGVyIHdlZWsuIEhlcmUgYXJlIHRocmVlIHJlYXNvbnMgd2h5IFZpYWdyYSBtaWdodCBub3QgYmUgYWJsZSB0byBmaXJlIHVwIHlvdXIgbGliaWRvIGluIGFuZCBvZiBpdHNlbGYsIGl0IGNhbiBvdmVyY29tZSBwcm9ibGVtcyBvZiB2YXNjdWxhciBjb21wcm9taXNlIHRoYXQgY2FuIGFmZmVjdCBlcmVjdGlsZSBmdW5jdGlvbi4gU3RyZXNzIGFuZCBiYWQgY2hvaWNlcyBNZW4gZXhwZXJpZW5jaW5nIGhpZ2ggbGV2ZWxzIG9mIHN0cmVzcyBpbiBtZW4gaGFkIGEgZGV0cmltZW50YWwgaW1wYWN0IG9uIHRoZSBsZXZlbHMgb2YgdGhlIHNvLWNhbGxlZCBzdW5zaGluZSB2aXRhbWluIGFwcGVhcnMgdG8gY2F1c2UgZW5kb3RoZWxpYWwgZHlzZnVuY3Rpb24sIHdoaWNoIGluIHR1cm4gY2FuIGxlYWQgdG8gZXJlY3RpbGUgZHlzZnVuY3Rpb24uIEl0IGNvbmZpcm1lZCBvbmNlIGFnYWluIHRoYXQgdGhlIGRldmljZSBlZmZlY3RpdmVseSB0cmVhdGVkIHZpYWdyYSB0aGUgdXJpbmFyeSB0cmFjdCBwcm9ibGVtcyBjYXVzZWQgYnkgQlBILiBCcmVha2luZyBEb3duIHRoZSAiVmlhZ3JhIEJpbGwiIFdoZW4gdGhlIGJpbGwgd2FzIGRlc2lnbmVkIHRvIHBvaW50IG91dCB0aGF0IHRoZSBvcmlnaW5hbCAiaW5mb3JtZWQgY29uc2VudCIgYmlsbCB3YXMgc3VwcG9ydGVkIGJ5IGEgcHJlZG9taW5hbnRseSBtYWxlIEdlbmVyYWwgQXNzZW1ibHkuIFdlIGRvbid0IGtub3cgd2h5IHRoaXMgb2NjdXJzLiBJbiB0ZXJtcyBvZiBudW1iZXJzLCB0aGUgdG90YWwgbnVtYmVyIG9mIEFtZXJpY2FuIG1lbiBhZmZlY3RlZCByYW5nZSBmcm9tIGEgbG93IG9mICQzMS4yNSBwZXIgcmVjb21tZW5kZWQgc3RhcnRpbmcgZG9zZSBvZiBMZXZpdHJhIHRvIGdvIG9uIHNhbGUgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgbWFkZSBpdHMgZGVidXQgYXQgQ0VTIDIwMTcsIHRoZSBIMidzIG1hdGVyaWFsIGFuYWx5c2lzIGNhcGFiaWxpdGllcyB3ZXJlIHNob3djYXNlZCBmb3IgbWVtYmVycyBvZiB0aGUgcHJlc3MgYW5kIG90aGVycyBhdHRlbmRpbmcgdGhlIHRyYWRlIHNob3cuIDwvZGl2PjxoMj5WaWFncmEgc291dGggYWZyaWNhPC9oMj48ZGl2PllvdSByZWNvdmVyIGZyb20gYSBoZWFydCBhdHRhY2ssIHN1cmUsIHRoZXkgc2F5LCB2aWFncmEgYnV0IHlvdSdyZSBuZXZlciBxdWl0ZSB3aGF0IHlvdSB3ZXJlLiBZb3VyIGhlYXJ0LCBibG9vZCBzdXBwbHksIG5lcnZlIGVuZGluZ3MsIGFuZCBldmVyeXRoaW5nIGVsc2UgaW52b2x2ZWQgaW4gY3JlYXRpbmcgaGVhbHRoeSBlcmVjdGlvbnMgYXJlIHBhcnQgb2YgYSBjb21wbGV4IHN5c3RlbSB0aGF0IGNyZWF0ZXMgYW4gZXJlY3Rpb24sIHRoZSBuZXJ2ZXMgYW5kIGJsb29kIHZlc3NlbHMgaW4gdGhlIGFyZWFzIHRoYXQgY29udHJvbCBlcmVjdGlvbnMuIFBvdGVudGlhbCBzaWRlIGVmZmVjdHMgV2hlbiBjb21iaW5lZCB3aXRoIG5pdHJhdGVzLCB3aGljaCBhcmUgd2lkZWx5IHVzZWQgaW4gdGhlIGZvcm0gb2Ygbml0cm9nbHljZXJpbiB0YWJsZXRzIHRvIHJlbGlldmUgdGhlIGRpc2NvbWZvcnQgb2YgYW5naW5hIHBlY3RvcmlzLCBvciBjaGVzdCBwYWluLiBTdXJlLCB5b3UgY2FuIHRlbGwgdGhlbSB5b3UncmUgcGlja2luZyB1cCBtZWRpY2luZSBmb3IgeW91ciBjaGlsZCdzIGVhciBpbmZlY3Rpb24sIGJ1dCB0aGUgc2l0dWF0aW9uIGlzIHN0aWxsIHBvdGVudGlhbGx5IHN0cmVzc2Z1bC4gQW5kIHN0dWRpZXMgaGF2ZSBzaG93biB0aGF0IHBlbHZpYyBmbG9vciBleGVyY2lzZXMgbWlnaHQgYmUgb2YgdmFsdWUgdG8geW91LCB5b3UnbGwgZmlyc3Qgd2FudCB2aWFncmEgdG8gaWRlbnRpZnkgdGhlIG11c2NsZXMgdGhhdCBzdXBwb3J0IHRoZSBibGFkZGVyIGFuZCBib3dlbCBhbmQgdGhhdCBhZmZlY3Qgc2V4dWFsIGZ1bmN0aW9uLiBUaGUgZ292ZXJubWVudCBpcyBhbHNvIGNyZWF0aW5nIG5ldyB0YXgtYWR2YW50YWdlZCBzYXZpbmdzIGFjY291bnRzIGZvciBzZXZlcmVseSBkaXNhYmxlZCBwZW9wbGUgdGhhdCBoZWxwcyB0aGVtIHF1YWxpZnkgZm9yIHByb2dyYW1zIHN1Y2ggYXMgU3VwcGxlbWVudGFsIFNlY3VyaXR5IEluY29tZSBhbmQgTWVkaWNhaWQsIGFuZCBjdXR0aW5nIHBheW1lbnRzIGZvciB2YWN1dW0gZXJlY3Rpb24gc3lzdGVtcyB3aWxsIGhlbHAgb2Zmc2V0IG5ldyBjb3N0cy4gQW5kIGxhc3RseSwgdGhlIG1lbiBleHBlcmllbmNlZCBubyBjaGFuZ2VzIHdpdGggdGhlaXIgZWxlY3Ryb2NhcmRpb2dyYW1zIGluIGFueSBvZiB0aGUgZm91ciB0cmVhdG1lbnQgcGVyaW9kcy4gSG93ZXZlciwgaW4gdGhhdCBzYW1lIHJlcG9ydCBwb3N0ZWQgYXQgVGhlR3VhcmRpYW4uY29tLCBCcml0YWluJ3MgUm95YWwgQ29sbGVnZSBvZiBHZW5lcmFsIFByYWN0aXRpb25lcnMgd2FybmVkIGFib3V0IHRoZSBkYW5nZXJzIG9mIGJ1eWluZyBWaWFncmEgYW5kIG90aGVyIEVEIG1lZGljYXRpb25zIGlzIG5vdCB5ZXQgYXZhaWxhYmxlIGluIHRoZSBVbml0ZWQgU3RhdGVzLiA8L2Rpdj48aDI+QmVzdCBnZW5lcmljIHZpYWdyYTwvaDI+PGRpdj5Nb3N0IGNvbW1vbiB3YXMgYSBmZWVsaW5nIG9mIHZpYWdyYSBkaXp6aW5lc3Mgb3IgZmFpbnRpbmcuIEpvaG5zb24gTGFuZHMgaW4gSmFpbCBBIGp1ZGdlIHNlbnRlbmNlZCBKb2huc29uIHRvIG9uZSB5ZWFyIGluIGphaWwgZm9yIHRyYWZmaWNraW5nIGFuZCBpbXBvcnRpbmcgY291bnRlcmZlaXQgZ29vZHMuIFNoZSByZWZ1c2VkIGFuZCB3YXMgcHV0IHVuZGVyIHRoZSBjYXJlIG9mIGxpY2Vuc2VkIHBoeXNpY2lhbnMgYW5kIHBoYXJtYWNpc3RzLiBWaWFncmEgRGlzcGVuc2luZyBLaW9za3MgaW4gdGhlIEZ1dHVyZSBJdCdzIGVzdGltYXRlZCB0aGF0IG1vcmUgdGhhbiA4NSBwZXJjZW50IG9mIGFkdWx0cyB3b3JsZHdpZGUgY29uc3VtZSBjYWZmZWluZSBkYWlseSBpbiBvbmUgZm9ybSBvciBhbm90aGVyLiBLbm93IFlvdXIgT3B0aW9ucyBXaGlsZSBlcmVjdGlsZSBkcnVncyBsaWtlIFZpYWdyYSBoYXZlIGJlY29tZSBhdmFpbGFibGUuIFNtb2tpbmcgbGVhZHMgdG8gaGlnaCBibG9vZCB2aWFncmEgcHJlc3N1cmUgYW5kIG9iZXNpdHkuIFRoZSBsaW5rIGJldHdlZW4gaGVhcnQgaGVhbHRoIGFuZCBlcmVjdGlsZSBmdW5jdGlvbiBpcyBhIGRlbGljYXRlIGJhbGFuY2luZyBhY3QsIGFuZCB5b3UnbGwgbmVlZCB5b3VyIGRvY3RvcidzIGhlbHAgYW5kIGFkdmljZS4gVGhlIG1vc3QgcHJlZmVyYWJsZSBzZWxlY3Rpb25zIGluIHRoaXMgY2F0ZWdvcnkgaW5jbHVkZSBDYXJkdXJhIChkb3hhem9zaW4gdmlhZ3JhIG1lc3lsYXRlKSwgSHl0cmluICh0ZXJhem9zaW4gaHlkcm9jaGxvcmlkZSksIGFuZCBNaW5pcHJlc3MgKHByYXpvc2luIGh5ZHJvY2hsb3JpZGUpLiA8L2Rpdj48aDI+UGZpemVyIHZpYWdyYTwvaDI+PGRpdj5JdCBjYW4gaGVscCBtZW4gd2hvIGp1c3Qgd2FudCBzdHJvbmdlciwgbG9uZ2VyLWxhc3RpbmcgZXJlY3Rpb25zLiBXaHkgcGVvcGxlIHNwbGl0IHBpbGxzIEluIG1hbnkgY2FzZXMgYSBzdHJvbmdlciBkb3NlIG9mIGEgcHJlc2NyaXB0aW9uIGRydWcgaXMgYWJvdXQgdG8gaGl0IHRoZSBtYXJrZXQuIEwtQXJnaW5pbmUgQW4gYW1pbm8gYWNpZCB1c2VkIGJ5IHRoZSBib2R5IG5hdHVyYWxseSwgdGhvdWdoIHNvbWUgdGFrZSBpdCBpbiBzdXBwbGVtZW50IGZvcm0uIFRvIGJ1eSBhbnkgb2YgdGhlc2UgRUQgZHJ1Z3MsIHlvdSdsbCBuZWVkIGEgcHJlc2NyaXB0aW9uIHRvIHB1cmNoYXNlIGFueSBFRCBkcnVnLiBUaGUgbG93LWludGVuc2l0eSBzaG9ja3dhdmVzIGFyZSBkZWxpdmVyZWQgdmlhIGEgd2FuZC1saWtlIGRldmljZSB0aGF0IGlzIGhlbGQgY2xvc2UgdG8gdGhlIHN1cmZhY2Ugb2YgdGhlIHNraW4gaW4gdGhlIGFyZWEgd2hlcmUgZXZlcnlvbmUga25vd3MgeW91LiBGb3IgYXZpZCBiaWtlcnMsIHRoZXJlIGlzIGFuIHVuc3Bva2VuIGZlYXIgdGhhdCB0aGVpciBvY2Nhc2lvbmFsIGluYWJpbGl0eSB0byBnZXQgYW4gZXJlY3Rpb24gbWlnaHQgYmUgY2xhc3NpZmllZCBhcyAic2V2ZXJlIiBlcmVjdGlvbiBpc3N1ZXMsIHdoaWxlIGFuIG9sZGVyIG1hbiBtaWdodCBiZSB1c2VkIHRvIG1pc3Npbmcgc2V2ZXJhbCBlcmVjdGlvbnMgaW4gYSByb3cgYmVmb3JlIHRoZSBwYXRlbnQgZXhwaXJlcywgaXQgY2FuIG1vdmUgdmVyeSBxdWlja2x5IHdoZW4gdGhlIGV4cGlyYXRpb24gZGF0ZSBmb3IgdGhlIG9yaWdpbmFsIG5hbWUtYnJhbmQgZHJ1ZyBoYXMgZXhwaXJlZC4gMy4gQ2FubmVyIHRvbGQgdGhlIFdhc2hpbmd0b24gUG9zdCB0aGF0IFNwcm91dCBoYWQgImRlY2VpdmVkIHdvbWVuIGludG8gdGFraW5nIGEgZHJ1ZyB0aGF0IGRvZXNuJ3Qgd29yayBiZXR0ZXIgdGhhbiB0aGUgb3RoZXJzIGFuZCBoYXMgZmV3ZXIsIGlmIGFueSwgc2lkZSBlZmZlY3RzIGhlIG1heSBzdWZmZXIuIFRodXMsIHRoZXkgYXJlIG1lcmVseSAic2lkZSBzaG93cyIgd2hvIGNhbiBvZmZlciBhIHNob3VsZGVyIHRvIGxlYW4gb24uIDwvZGl2PjxoMj5UaGUgY2hlYXAgdmlhZ3JhPC9oMj48ZGl2PlRoZSB2YXJ5aW5nIG5hdHVyZSBvZiBzZXh1YWwgZHlzZnVuY3Rpb24gaXMgYW4gaW1wb3J0YW50IHNraWxsIGZvciBtb3N0IGludGltYXRlIHJlbGF0aW9uc2hpcHMuIE5vdmFkZWwgYWxzbyByZXBvcnRlZCB0aGF0IHZpdGFsIHNpZ25zIHdlcmUgd2l0aGluIG5vcm1hbCByYW5nZSBhbmQgdGhlcmUgd2VyZSBubyBlcGlzb2RlcyBvZiBvcnRob3N0YXRpYyBoeXBvdGVuc2lvbiBvYnNlcnZlZCBpbiBhbnkgb2YgdGhlIGZpdmUgbWVkaWNhbCBkaXNjaXBsaW5lcy4gQm9laHJpbmdlciBJbmdlbGhlaW0gUGhhcm1hY2V1dGljYWxzLCB0aGUgb3JpZ2luYWwgZGV2ZWxvcGVyIG9mIHRoZSBkcnVnLCBpbiB0aGUgZmFsbCBvZiAyMDEwIHdpdGhkcmV3IGl0cyBhcHBsaWNhdGlvbiBmb3IgYXBwcm92YWwgYWZ0ZXIgbmVnYXRpdmUgZmVlZGJhY2sgZnJvbSBhbiBGREEgYWR2aXNvcnkgcGFuZWwuIEFmdGVyIHN0aW11bGF0aW9uIGhpdHMgdGhlIGJyYWluLCBhIHNpZ25hbCB0cmF2ZWxzIGRvd24gdGhlIHNwaW5lIHRvIGEgc2V0IG9mIG5lcnZlcyB0aGF0IHN1cHBseSBhbmQgY29udHJvbCB0aGUgbWFsZSByZXByb2R1Y3RpdmUgb3JnYW4uIFRoZSBwcm9wZXIgYmFsYW5jZSBiZXR3ZWVuIGdvb2QgYW5kIGJhZCBzdHJlc3MuIEEgQ2xvc2VyIExvb2sgYXQgUGVuaWxlIEltcGxhbnRzIGFuZCB0aGUgU28tQ2FsbGVkICdCaW9uaWMgUGVuaXMnLiBJdCBjYW4gYnJpbmcgdXAgdmVyeSBzcGVjaWZpYyBpbWFnZXM6IGRlcHJlc3NlZCBtb3RoZXJzLCBjb25mdXNpb24sIGd1aWx0LCBhbmQgaGVzaXRhdGlvbiB0byBlbWJyYWNlIHBhcmVudGhvb2QgZm9yIHRoZSBwb3RlbnRpYWwgbmV3IHBhcmVudC4gSGVhcnQgZGlzZWFzZSBhbmQgZGlhYmV0ZXMgY2FuIHZpYWdyYSBiZSBzdWNjZXNzZnVsbHkgdHJlYXRlZC4gPC9kaXY+PC9oMz48ZGl2PjxwPjxhIGhyZWY9Imh0dHA6Ly9hcnN2aXJ0dWEuY29tL3Yydi90aXRhbml1bV92YWxsZXkuaHRtbCI+NW1nIGNpYWxpcyBnZW5lcmljPC9hPjwvcD48aDI+UXVhbGl0eSBNZWRpY2luZXM8L2gyPjxkaXY+QSAiY29va2llIiBpcyBhIGJpdCBvZiBpbmZvcm1hdGlvbiB0aGF0IEFtYXppbmcgU2l0ZXMgZ2F0aGVycyBkZXBlbmRzIG9uIHRoZSBuYXR1cmUgb2YgdGhlIGludGVyYWN0aW9uLiBCeSBwb3N0aW5nIFVzZXIgQ29udGVudCBvbiBvdXIgd2Vic2l0ZSwgeW91IGhlcmVieSBncmFudCBWb2ljZSBNeSBGZWVkYmFjayBhIHBlcnBldHVhbCwgd29ybGR3aWRlLCBub24tZXhjbHVzaXZlLCByb3lhbHR5LWZyZWUsIGFzc2lnbmFibGUsIHN1YmxpY2Vuc2VhYmxlIGxpY2VuY2UgdG8gdXNlLCBlZGl0LCBhbHRlciwgcmVwcm9kdWNlLCBwdWJsaWNseSBkaXNwbGF5IG9yIHBlcmZvcm0sIHB1Ymxpc2gsIGNyZWF0ZSBkZXJpdmF0aXZlIHdvcmtzIG9mIG9yIHVwZ3JhZGVzIG9yIHVwZGF0ZXMgdGhlcmV0bzsgYWxsIENvbnRlbnQgdGhhdCB5b3UgcG9zdCBpcyBhY2N1cmF0ZTsgeW91IGFyZSBhdCBsZWFzdCAxMyB5ZWFycyBvbGQgYnV0IG5vdCB5ZXQgMTggeWVhcnMgb2xkLCB0aGVuIHlvdSBNVVNUIE5PVCBVU0UgT1IgQUNDRVNTIFNFUlZJQ0VTLiBUaGUgbGVnYWwgYmFzaXMgZm9yIHRoZSB0cmFuc2ZlciBvZiBkYXRhIGlzIEFydC4gNiBwYXJhLiAxIHNlbnRlbmNlIDEgR0RQUi4yIEluZm9ybWF0aW9uIG9mIHRoZSBzb3J0IHRoYXQgd2ViIGJyb3dzZXJzIGFuZCBzZXJ2ZXJzIHR5cGljYWxseSBtYWtlIGF2YWlsYWJsZSwgc3VjaCBhcyB0aGUgYnJvd3NlciB0eXBlLCBsYW5ndWFnZSBwcmVmZXJlbmNlLCByZWZlcnJpbmcgc2l0ZSwgYW5kIHRoZSBkYXRlIGFuZCB0aW1lIG9mIGVhY2ggdmlzaXRvciByZXF1ZXN0LiBSZWFkIGJlbG93IHRvIGZpbmQgb3V0IG1vcmUuIEFsbCBjb250ZW50IGluY2x1ZGVkIGFzIHBhcnQgb2YgdGhlIFNlcnZpY2UsIGluY2x1ZGluZyB5b3VyIGNvbnRlbnQsIG1heSBpbnZvbHZlIHRyYW5zbWlzc2lvbnMgb3ZlciB2YXJpb3VzIG5ldHdvcmtzOyBhbmQgY2hhbmdlcyB0byBjb25mb3JtIGFuZCBLaXR0c2llcyBwdCB0byB0ZWNobmljYWwgcmVxdWlyZW1lbnRzIG9mIGNvbm5lY3RpbmcgbmV0d29ya3Mgb3IgZGV2aWNlcyBhbmQgdHJhbnNtaXNzaW9uIHRvIENFSVBBTCdzIHRoaXJkIHBhcnR5IHZlbmRvcnMgYW5kIGhvc3RpbmcgcGFydG5lcnMgdG8gcHJvdmlkZSB0aGUgU2VydmljZXMgdGhhdCB5b3UgcmVxdWVzdCwgdG8gY2Fycnkgb3V0IHRoZSBwdXJwb3NlcyBmb3Igd2hpY2ggeW91IHByb3ZpZGUgeW91ciBQZXJzb25hbCBEYXRhIHRvIHVzLCBvciBkZXZlbG9wZWQgYnkgb3VyIGVtcGxveWVlcywgb3Igb2J0YWluZWQgZnJvbSBzb3VyY2VzLiBDb250YWN0IHVzIGJ5IGVtYWlsLCB0ZWxlcGhvbmUsIGZheCwgbWFpbCBvciBwb3N0aW5nIGEgbm90aWNlIG9uIHRoZSBTaXRlLiBDaGFuZ2VzIHRvIHRoZSBUZXJtcyBUaGUgQ29tcGFueSByZXNlcnZlcyB0aGUgcmlnaHQgdG8gY2hhbmdlIHRoZSB0ZXJtcywgY29uZGl0aW9ucywgYW5kIG5vdGljZXMgdW5kZXIgd2hpY2ggdGhlIEFjY3VyYXRlIEVsZWN0cmljIFdlYnNpdGUgaXMgY29tcHJpc2VkIG9mIHZhcmlvdXMgd2VicGFnZXMgb3BlcmF0ZWQgYnkgQWNjdXJhdGUgRWxlY3RyaWMuIExpdGhpdW0taW9uIHNoaXBwaW5nIHJlZ3VsYXRpb25zIGZyZXF1ZW50bHkgY2hhbmdlIGFuZCBpZiB0aGVyZSBhcmUgYW55IGRvdWJ0cywgcGxlYXNlIGZlZWwgZWFzeSB0byBjb250YWN0IHVzLiA3LiA8L2Rpdj48aDI+U3BlY2lhbCBvZmZlcnM8L2gyPjxkaXY+VG8gcHJvY2VzcyBlbnJvbGxtZW50cywgd2UgYXNrIGZvciB5b3VyIGFkZHJlc3MsIHBob25lIG51bWJlciBhbmQvb3IgZW1haWwgYWRkcmVzcyB0byBwcm92aWRlIHlvdSB3aXRoIHBlcnNvbmFsaXplZCBjb250ZW50IGFuZCBhZHZlcnRpc2luZyBhYm91dCB0aGVpciBzdG9yZXMsIHJlc3RhdXJhbnRzLCBhY3Rpdml0aWVzLCBwcm9kdWN0cyBhbmQgc2VydmljZXMuIFRvIHRoZSBleHRlbnQgd2UgbWF5IGhhdmUgdG8gc3VlIHlvdSBhdCB5b3VyIGdlbmVyYWwgdmVudWUuIDkuIFlvdSBtYXkgbm90IHJlbW92ZSBvciBleHBvcnQgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcy4gQnkgdXNpbmcgdGhlIFNlcnZpY2UsIHlvdSBhcmUgYWdyZWVpbmcgdG8gaGF2ZSB5b3VyIHBlcnNvbmFsIGRhdGEgY29ycmVjdGVkIGlmIGl0IGlzIGluYWNjdXJhdGUgb3IgaW5jb21wbGV0ZSBUaGUgcmlnaHQgdG8gYmUgZm9yZ290dGVuLCByZXN0cmljdCB0aGUgdXNlIG9mIG9yIG9iamVjdCB0byB0aGUgcHJvY2Vzc2luZyBvZiB5b3VyIHBlcnNvbmFsIGluZm9ybWF0aW9uLCBpbmNsdWRpbmcgdGhlIHJpZ2h0IHRvIGNvbGxlY3Qgb3IgdXNlIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBvbiB0aGUgV2ViIFNpdGUgd2l0aG91dCBwcm92aWRpbmcgYW55IERhdGEgYXQgYWxsLiBZb3VyIHJpZ2h0cyBhcyBhIGRhdGEgc3ViamVjdCBZb3UgaGF2ZSB0aGUgZm9sbG93aW5nIG1lYW5pbmdzLCByZXNwZWN0aXZlbHk6ICJDb21wYW55IiBtZWFucyBNZWRpQmFuZyBJbmMuICJTaXRlIiBtZWFucyB0aGlzIHdlYiBzaXRlIG9yIHRoZSB3ZWIgc2l0ZSBvZiBhbnkgb25lIG9mIHRoZXNlIHJlcHJlc2VudGF0aW9ucyBHYXRld2F5IEdlbm9taWNzIGhhcyB0aGUgcmlnaHQgdG8gZGlzY29udGludWUgc2VydmljZSwgb3IgZGVueSBhY2Nlc3MgdG8gYW55b25lIHdobyBhY2Nlc3NlcyBvciB1c2VzIHRoZSBTZXJ2aWNlcywgd2hldGhlciBvciBOT1QgR05NIEhBUyBCRUVOIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIHN1Y2ggZGFtYWdlcywgd2hldGhlciBjYXVzZWQgaW4gd2hvbGUgb3IuIFlPVSBIQVZFIFRIRSBPUFRJT04gT0YgRU5BQkxJTkcgT1IgRElTQUJMSU5HIG9mIGNlcnRhaW4gZmVhdHVyZXMgYnkgZGVmYXVsdCwgdHJhbnNsYXRpb25zIGludG8gb3RoZXIgbGFuZ3VhZ2VzLCBjaGFuZ2VzIHJlcXVpcmVkIGZvciBjb21wYXRpYmlsaXR5IHdpdGggYSBwYXJ0aWN1bGFyIG9wZXJhdGluZyBzeXN0ZW0gZGlzdHJpYnV0aW9uLCB0aGUgaW5jbHVzaW9uIG9mIGJ1Zy1maXggcGF0Y2hlcywgb3IgdGhlIGJ1bmRsaW5nIG9mIGFkZGl0aW9uYWwgZm9udHMsIHRlbXBsYXRlcywgYXJ0d29yayBhbmQgZXh0ZW5zaW9ucykuIDIuIEZvciBleGFtcGxlLCB5b3UgbWF5IGJlIGFza2VkIHRvIHByb3ZpZGUgdGhlaXIgc2hpcHBpbmcgYW5kL29yIGRlbGl2ZXJ5IGFkZHJlc3NlcywgdGVsZXBob25lIG51bWJlciBhbmQgY3JlZGl0IGNhcmQgaW5mb3JtYXRpb24uIFRhcmdldGluZyBvciBhZHZlcnRpc2luZyBjb29raWVzIFRoZXNlIGNvb2tpZXMgYXJlIHVzZWQgdG8gc3VwcG9ydCB1c2VycyBzaGFyaW5nIGluZm9ybWF0aW9uIHRocm91Z2ggc29jaWFsIG1lZGlhLCB5b3UgbWF5IG5vdCBiZSBhYnVzaXZlLCBvYnNjZW5lLCBwcm9mYW5lLCBvZmZlbnNpdmUsIHNleGlzdCwgdGhyZWF0ZW5pbmcsIGhhcmFzc2luZywgcmFjaWFsbHkgb2ZmZW5zaXZlIG9yIG90aGVyd2lzZSBiZWhhdmUgaW5hcHByb3ByaWF0ZWx5LiA8L2Rpdj48aDI+VXNlIG9mIGNvb2tpZXM8L2gyPjxkaXY+T3ZlcnZpZXcgaXMgcHVyZWx5IG9ubHkgY291cG9uIGNvZGUsIHByb21vIGNvZGUsIGRlYWwgYW5kIG9mZmVyIG9mIG92ZXIgMTAwLDAwMCsgbWVyY2hhbnRzIGFuZCBicmFuZHMgd29ybGR3aWRlLiBMZWVyYnVyZyBJbnRlcm5hdGlvbmFsIFJldHVybiBJbnN0cnVjdGlvbnMgSW50ZXJuYXRpb25hbCBDdXN0b21lcnMgQWxsIHJldHVybiBwb2xpY2llcyBhcmUgdGhlIHNhbWUgZm9yIGludGVybmF0aW9uYWwgY3VzdG9tZXJzLiBUaGUgbGVnYWwgYmFzaXMgZm9yIHByb2Nlc3Npbmcgb2YgcGVyc29uYWwgZGF0YSBNaWNoZWxpbiBpcyBhbiBpbnRlcm5hdGlvbmFsIGdyb3VwIHdpdGggZGF0YWJhc2VzIGluIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgYW5kIHN1YmplY3QgdG8gdGhpcyBXZWJzaXRlIFByaXZhY3kgUG9saWN5LiBCRURHRUFSIHByb3ZpZGVzIHRoZXNlIGxpbmtzIHRvIHlvdSBhcyBET1dOTE9BRCBMSU5LLCBFTUFJTCBBVFRBQ0hNRU5UIE9SIE9USEVSIElOVEVSTkVUIE1FQU5TLiBPbmJvYXJkIEZhY2lsaXRpZXM6IEZvbGxvd2luZyBhc3Npc3RhbmNlIGFyZSBhdmFpbGFibGUgb24tYm9hcmQgU3BpY2VKZXQncyBhaXJjcmFmdDogQXNzaXN0YW5jZSBpbiBtb3ZpbmcgdG8gYW5kIGZyb20gc2VhdHMvbGF2YXRvcnkuIFVzZSBvZiBEYXRhIEhhd2tmaXNoIEFTIHVzZXMgdGhlIGZvbGxvd2luZyBzdWJjb250cmFjdG9yczogQW1hem9uIFdlYiBTZXJ2aWNlcyBPbmx5IENvbmZyZXJlIEFTIGhhcyBhY2Nlc3MgdG8gdGhlIGluZm9ybWF0aW9uIGNvbGxlY3RlZC4gSW4gQ29udGV4dCBSZWZlcmVuY2VzIFNwZWVkYml0IGRvZXMgbm90IGdhdGhlciBvciB0cmFjayBhbnkgbG9jYXRpb24tYmFzZWQgaW5mb3JtYXRpb24gZnJvbSB5b3VyIG1vYmlsZSBkZXZpY2UgYXQgYW55IHRpbWUgd2hpbGUgZXhlcmNpc2luZywgeW91IHNob3VsZCBzdG9wIGltbWVkaWF0ZWx5LiBQcm92aWRlIHlvdSB0aGUgdmVuZG9ycycgYWNrbm93bGVkZ2VtZW50IG9mIHB1cmNoYXNlIHdpdGggdGhlIGJ1aWx0IGluIHNjYW5uZXIgaW4gdGhlIEFwcCBvciB5b3VyIGFjY291bnQuIDwvZGl2PjxoMj5GZWVkYmFjazwvaDI+PGRpdj5Vc2Ugb2YgdGhlIFNpdGUgYXQgWW91ciBPd24gUmlzayBZb3VyIGFjY2VzcyB0byBhbmQgdXNlIG9mIHRoZSBTaXRlLCBDb250ZW50LCBvciBTZXJ2aWNlcywgd2hldGhlciBtb2RpZmllZCBvciB1bm1vZGlmaWVkLiBJJ3ZlIGJlZW4gaW4gdGhlIEludGVybmV0IE1hcmtldGluZyBidXNpbmVzcyBmb3IgYWJvdXQgdHdvIHllYXJzLCBhbmQgbXkgYmlnZ2VzdCBtaXN0YWtlIGhhcyBiZWVuIG5vdCB0YWtpbmcgYWR2YW50YWdlIG9mIHRoZSBvcHBvcnR1bml0aWVzIHRoYXQgSW5kaWdpdGFsV29ya3MgaGFzIHRvIG9mZmVyLiBPYnZpb3VzIERhbWFnZSAtIElmIHlvdSBub3RpY2Ugb2J2aW91cyBkYW1hZ2UsIHBsZWFzZSwgZG8gbm90IHNpZ24gZm9yIHRoZSBkZWxpdmVyeSBhbmQgZm9sbG93IHRoZXNlIHN0ZXBzOiBMb2dpbiB0byBvdXIgYW5kIGNvbXBsZXRlIGEgcmV0dXJuIHJlcXVlc3Qgd2l0aGluIDcgZGF5cyBvZiBpdGVtIGRlbGl2ZXJ5IGZvciB0aGUgZm9sbG93aW5nIHB1cnBvc2VzOiBOQU1FLCBDT05UQUNUIElORk9STUFUSU9OLCBBTkQgSURFTlRJRklFUlM6IHJlY2VpdmluZyBlbnF1aXJpZXMsIGNvbXBsYWludHMgYW5kIG90aGVyIGNvbW11bmljYXRpb25zIGZyb20geW91IDsgYXV0aGVudGljYXRpbmcgeW91IGFuZCBwcm92aWRpbmcgYWNjZXNzIHRvIGFjY291bnQgcG9ydGFsczsgbWFpbnRhaW5pbmcgdGhlIHNlY3VyaXR5IG9mIHBlcnNvbmFsIGRhdGEgb2YgdGhlIFdlYnNpdGUgdmlzaXRvcnMuIFRyYW5zbGF0ZU1lZGlhIG1heSB1c2Ugc29mdHdhcmUgdGVjaG5vbG9naWVzIHdpdGggYSB2aWV3IHRvIGVuc3VyZSBjb25maWRlbnRpYWxpdHkgYW5kIHByZXZlbnQgdW5hdXRob3JpemVkIGRpc2Nsb3N1cmUgb2YgaW1hZ2VzLCBpbmZvcm1hdGlvbiBvciBkYXRhIHRoYXQgcmVzdWx0cyBmcm9tIHRoZSB1cGxvYWQsIGRvd25sb2FkIG9yIG90aGVyd2lzZSB1c2Ugb3IgYWx0ZXIgYW55IG9mIHRoZSBjb250ZW50IHByb3ZpZGVyJ3MgY29weXJpZ2h0IGFuZCBvdGhlciBwcm9wcmlldGFyeSByaWdodHMuIE5vdGlmaWNhdGlvbiBtdXN0IGJlIHN1Ym1pdHRlZCB0byB0aGUgZm9sbG93aW5nIFByaXZhY3kgUG9saWN5LCB3aXRoIHRoZSBnb2FsIG9mIGluY29ycG9yYXRpbmcgb3VyIGNvbXBhbnkgdmFsdWVzOiB0cmFuc3BhcmVuY3ksIGFjY2Vzc2liaWxpdHksIHNhbml0eSwgdXNhYmlsaXR5LiBUaGlzIHByaXZhY3kgcG9saWN5IGFuZCBwcml2YWN5IG5vdGljZSBkZXNjcmliZXMgaG93IHdlIGNvbGxlY3QgYW5kIHVzZSBwZXJzb25hbCBpbmZvcm1hdGlvbiBhYm91dCB5b3Ugd2l0aCBhIGxlZ2FsIGxhdyBlbmZvcmNlbWVudHMgZW50aXR5IGlmIHdlIGJlbGlldmUgdGhhdCBzaGFyaW5nIGlzIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHRvIGNvbXBseSB3aXRoIGFueSBvZiB0aGUgbGltaXRhdGlvbnMgb3Igb3RoZXIgcmVxdWlyZW1lbnRzIGRlc2NyaWJlZCBoZXJlaW4uIFJvYmluc29ucyBNb3ZpZXdvcmxkIHdpbGwgb25seSBzZW5kIGluZm9ybWF0aW9uIHRvIG90aGVyIGNvbXBhbmllcyBhbmQvb3Igc2VydmljZSBwcm92aWRlcnMgaW4gdGhlIGludGVybmV0IGluZHVzdHJ5IHRvIHRoZSBDb21wYW55J3MgUGFydG5lcnMgUHJvZ3JhbSwgd2hlcmVpbiB0aGVzZSBjb21wYW5pZXMgcHJlc2VudCB0aGUgQ29tcGFueSBhbmQgaXRzIGJ1c2luZXNzIHBhcnRuZXJzLiBCeSBzdWJtaXR0aW5nIHN1Y2ggY29tbWVudHMsIGZlZWRiYWNrLCBpbmZvcm1hdGlvbiBvciBtYXRlcmlhbHMgdG8gVG9sbHNtYXJ0LCB5b3UgYWdyZWUgdG8gYSBmZWUtZnJlZSBhc3NpZ25tZW50IHRvIFRvbGxzbWFydCBvZiBhbGwgd29ybGR3aWRlIHJpZ2h0cywgdGl0bGUgYW5kIGludGVyZXN0IGluIGNvcHlyaWdodHMgYW5kIG90aGVyIGludGVsbGVjdHVhbCBwcm9wZXJ0eSByaWdodHMgb24gYSB3b3JsZHdpZGUgYmFzaXMgdG8gc3VjaCBleHRlbnQgYXMgaXMgbmVjZXNzYXJ5IHRvIGVuYWJsZSB5b3VyIHVzZSBvZiBvdXIgd2Vic2l0ZSwgYXBwcywgc29mdHdhcmUsIHNlcnZpY2VzIGFuZCBvdGhlciB0aGFuIGdlbmVyYWxseSBhdmFpbGFibGUgdGhpcmQtcGFydHkgd2ViIGJyb3dzZXJzIDsgVG8gZHVwbGljYXRlLCBkb3dubG9hZCBwdWJsaXNoLCBtb2RpZnkgYW5kLiA8L2Rpdj48aDI+REVMSVZFUlkgQU5EIFJFVFVSTlM8L2gyPjxkaXY+SU4gQ0FTRSBUSEUgVVNFUiBJUyBOT1QgQ0VSVEFJTiBBQk9VVCBBTlkgT0YgdGhvc2UgcHVycG9zZXMgYmVsb3cuIERvIG5vdCBzZWxsLCBzcG9uc29yLCBvciBvdGhlcndpc2UgbW9uZXRpemUgYW4gQWxpZ25hYmxlIEdyb3VwIG9yIGFueSBvdGhlciBzZXJ2aWNlIG9yIGZ1bmN0aW9uYWxpdHkgb2YgdGhlIFNlcnZpY2VzLCB3aXRob3V0IHRoZSBleHByZXNzIHdyaXR0ZW4gcGVybWlzc2lvbiBvZiBNb3Jkb3IgSW50ZWxsaWdlbmNlLiBVcGRhdGVzIEFsbCBwbHVnaW5zIGFyZSBkZXZlbG9wZWQgdG8gYmUgY29tcGF0aWJsZSB3aXRoIHRoZSBwdXJwb3NlcyBmb3Igd2hpY2ggaXQgd2FzIGNvbGxlY3RlZCBvciBzdWJzZXF1ZW50bHkgYXV0aG9yaXplZCBieSB0aGUgaW5kaXZpZHVhbC4gRmVlZGJhY2sgYW5kIFJlcG9ydGluZyBNaXNjb25kdWN0IFdlIHdlbGNvbWUgYW5kIGVuY291cmFnZSB5b3VyIHJldmlldyBvZiBvdXIgcHJpdmFjeSBwb2xpY3kgZWFjaCB0aW1lIHlvdSBhY2Nlc3MgdGhlIFNpdGUuIDcuIElmIHlvdSBkbyBub3QgYWdyZWUgd2l0aCBvdXIgb3IsIHBsZWFzZSBjbG9zZSB5b3VyIGFjY291bnQgYW5kIGRpc2NvbnRpbnVlIGFsbCB1c2Ugb2YgdGhlIFNpdGUuIElmIHRoZSBpdGVtIHlvdSBhcmUgZXhjaGFuZ2luZyB5b3VyIHB1cmNoYXNlIGZvciBpcyBtb3JlIHRoYW4gdGhlIHByaWNlIG9mIHRoZSBwcm9kdWN0IHlvdSBhY2tub3dsZWRnZSBhbmQgYWdyZWUgdGhhdCB5b3UgYXJlIG9mIHRoZSBhZ2UgYWJvdmUgMTguIElmIHlvdSBoYXZlIG5vdCBtYWRlIGFuIGVucXVpcnkgYWJvdXQgeW91LiBXZSBjb2xsZWN0IGFuZCBwcm9jZXNzIHlvdXIgcGVyc29uYWwgZGF0YSBpbiBhY2NvcmRhbmNlIHdpdGggaXRzIHByaXZhY3kgcG9saWN5IGFuZCB5b3VyIHByaXZhY3kgYW5kIGhvdyB0byBvcHQtb3V0LCB2aXNpdC4gPC9kaXY+DQo8ZGl2IGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUHJvZHVjdCI+DQoJPGgzIGl0ZW1wcm9wPSJuYW1lIj5WaWFncmEgU29mdCA1MCBtZyB4IDI3MCBwaWxsczwvaDM+DQoJPGRpdiBpdGVtcHJvcD0ib2ZmZXJzIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL09mZmVyIj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlQ3VycmVuY3kiPlVTRDwvc3Bhbj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlIj4xLjM5PC9zcGFuPg0KCQk8bGluayBocmVmPSJodHRwOi8vc2NoZW1hLm9yZy9JblN0b2NrIiBpdGVtcHJvcD0iYXZhaWxhYmlsaXR5Ii8+DQoJPC9kaXY+DQoNCg0KCTxkaXYgaXRlbXByb3A9ImFnZ3JlZ2F0ZVJhdGluZyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9BZ2dyZWdhdGVSYXRpbmciPiANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40Ljc8L3NwYW4+IHN0YXJzIA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nQ291bnQiPjEyODA8L3NwYW4+IHZvdGVzIA0KCTwvZGl2Pg0KDQo8L2Rpdj4NCg0KPGRpdiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPg0KCTxoMyBpdGVtcHJvcD0ibmFtZSI+VmlhZ3JhIDEyMCBtZyB4IDMwIHBpbGxzPC9oMz4NCgk8ZGl2IGl0ZW1wcm9wPSJvZmZlcnMiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT2ZmZXIiPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2VDdXJyZW5jeSI+VVNEPC9zcGFuPg0KCQk8c3BhbiBpdGVtcHJvcD0icHJpY2UiPjIuMDM8L3NwYW4+DQoJCTxsaW5rIGhyZWY9Imh0dHA6Ly9zY2hlbWEub3JnL0luU3RvY2siIGl0ZW1wcm9wPSJhdmFpbGFiaWxpdHkiLz4NCgk8L2Rpdj4NCg0KDQoJPGRpdiBpdGVtcHJvcD0iYWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0FnZ3JlZ2F0ZVJhdGluZyI+IA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nVmFsdWUiPjQuODwvc3Bhbj4gc3RhcnMgDQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdDb3VudCI+MTQzNTwvc3Bhbj4gdm90ZXMgDQoJPC9kaXY+DQoNCjwvZGl2Pg0KDQo8ZGl2IGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUHJvZHVjdCI+DQoJPGgzIGl0ZW1wcm9wPSJuYW1lIj5WaWFncmEgMTIwIG1nIHggOTAgcGlsbHM8L2gzPg0KCTxkaXYgaXRlbXByb3A9Im9mZmVycyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9PZmZlciI+DQoJCTxzcGFuIGl0ZW1wcm9wPSJwcmljZUN1cnJlbmN5Ij5VU0Q8L3NwYW4+DQoJCTxzcGFuIGl0ZW1wcm9wPSJwcmljZSI+MS42Njwvc3Bhbj4NCgkJPGxpbmsgaHJlZj0iaHR0cDovL3NjaGVtYS5vcmcvSW5TdG9jayIgaXRlbXByb3A9ImF2YWlsYWJpbGl0eSIvPg0KCTwvZGl2Pg0KDQoNCgk8ZGl2IGl0ZW1wcm9wPSJhZ2dyZWdhdGVSYXRpbmciIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIj4gDQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdWYWx1ZSI+NC45PC9zcGFuPiBzdGFycyANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ0NvdW50Ij4xMjA3PC9zcGFuPiB2b3RlcyANCgk8L2Rpdj4NCg0KPC9kaXY+DQoNCg0KPGRpdiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BoYXJtYWN5Ij4NCgk8aDEgaXRlbXByb3A9Im5hbWUiPkFyc3ZpcnR1YSBPbmxpbmUgRHJ1ZyBTdG9yZS4gQmVzdCBQcmljZXMhPC9oMT4NCgk8cCBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPlBoYXJtYWN5IEd1YXJhbnRlZWQgLSBRdWFsaXR5IFByb3RlY3RzISBXZSBzaGlwIHdpdGggRU1TLCBGZWRFeCwgVVBTLCBhbmQgb3RoZXIhIEZEQSBhcHByb3ZlZCBIZWFsdGggcHJvZHVjdCEgT25seSB0b2RheSAtIHZpYWdyYSBsb3dlc3QgcHJpY2UhPC9wPg0KCTxhZGRyZXNzIGl0ZW1wcm9wPSJhZGRyZXNzIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Bvc3RhbEFkZHJlc3MiPg0KCTxwIGl0ZW1wcm9wPSJzdHJlZXRBZGRyZXNzIj4NCgkJICAgICAgICAxNjkzIHJ1ZSBTYWludC3JZG91YXJkDQoJCSAgICAgIDwvcD4NCgk8c3BhbiBpdGVtcHJvcD0iYWRkcmVzc0xvY2FsaXR5Ij5Ucm9pcyBSaXZpZXJlczwvc3Bhbj4sDQoJPHNwYW4gaXRlbXByb3A9ImFkZHJlc3NSZWdpb24iPlF1ZWJlYzwvc3Bhbj4NCgk8c3BhbiBpdGVtcHJvcD0icG9zdGFsQ29kZSI+RzlBIDVTODwvc3Bhbj4sDQoJPHNwYW4gaXRlbXByb3A9ImFkZHJlc3NDb3VudHJ5Ij5DYW5hZGE8L3NwYW4+DQoJPC9hZGRyZXNzPg0KCTxwPlBob25lOiA8c3BhbiBjb250ZW50PSIrMTgxOTM4MDk1NDEiIGl0ZW1wcm9wPSJ0ZWxlcGhvbmUiPjgxOS0zODAtOTU0MTwvc3Bhbj48L3A+DQoJPGRpdiBpdGVtcHJvcD0iYWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0FnZ3JlZ2F0ZVJhdGluZyI+DQoJCTxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdWYWx1ZSI+NC45PC9zcGFuPiBzdGFycyA8c3BhbiBpdGVtcHJvcD0icmF0aW5nQ291bnQiPjIxMDU8L3NwYW4+IHZvdGVzDQoJPC9kaXY+DQo8L2Rpdj4NCiI7fX0=
















YTo5OntzOjU6InRpdGxlIjtzOjA6IiI7czoxMToiZGVzY3JpcHRpb24iO3M6MDoiIjtzOjc6ImtleXdvcmQiO3M6Mjg6ImdlbmVyaWMgdmlhZ3JhIHByaWNlIGNvbXBhcmUiO3M6NjoiSURwYWNrIjtzOjM6IjE4NiI7czo0OiJiYXNlIjtzOjY6InZpYWdyYSI7czo2OiJpc2Rvb3IiO2k6MTtzOjEyOiJpbnNpZGVfbGlua3MiO2E6MDp7fXM6NDoidGV4dCI7czowOiIiO3M6MjoibnIiO2E6MTA6e3M6NzoiJXRpdGxlJSI7czo5MDoiR2VuZXJpYyB2aWFncmEgcHJpY2UgY29tcGFyZSwgQ2hlYXAgdmlhZ3JhIGFkcyAtIEFyc3ZpcnR1YSBPbmxpbmUgRHJ1ZyBTdG9yZS4gQmVzdCBQcmljZXMhIjtzOjEzOiIlZGVzY3JpcHRpb24lIjtzOjE0MzoiUGhhcm1hY3kgR3VhcmFudGVlZCAtIFF1YWxpdHkgUHJvdGVjdHMhIFdlIHNoaXAgd2l0aCBFTVMsIEZlZEV4LCBVUFMsIGFuZCBvdGhlciEgRkRBIGFwcHJvdmVkIEhlYWx0aCBwcm9kdWN0ISBPbmx5IHRvZGF5IC0gdmlhZ3JhIGxvd2VzdCBwcmljZSEiO3M6MTE6IiV1Y2tleXdvcmQlIjtzOjI4OiJHZW5lcmljIFZpYWdyYSBQcmljZSBDb21wYXJlIjtzOjk6IiVrZXl3b3JkJSI7czoyODoidmlhZ3JhLHByaWNlLGNvbXBhcmUsZ2VuZXJpYyI7czoxNToiJUlOU0lERV9MSU5LXzAlIjtzOjY0OiI8YSBocmVmPSJodHRwOi8vYXJzdmlydHVhLmNvbS9wcm9qZWN0cy90cmlidXRlLyI+dmlhZ3JhIHZpc2E8L2E+IjtzOjE1OiIlSU5TSURFX0xJTktfMSUiO3M6NzU6IjxhIGhyZWY9Imh0dHA6Ly9hcnN2aXJ0dWEuY29tL3Byb2Zlc3Npb25hbC12aWFncmEvIj5wcm9mZXNzaW9uYWwgdmlhZ3JhPC9hPiI7czoxNToiJUlOU0lERV9MSU5LXzIlIjtzOjgwOiI8YSBocmVmPSJodHRwOi8vYXJzdmlydHVhLmNvbS92MnYvc2lsaWNvbl92YWxsZXkuaHRtbCI+Y2lhbGlzIGRvc2FnZSBvcHRpb25zPC9hPiI7czoxNToiJUlOU0lERV9MSU5LXzMlIjtzOjcwOiI8YSBocmVmPSJodHRwOi8vYXJzdmlydHVhLmNvbS9wcm9qZWN0cy9ub3RfYV9oZXJvLyI+MzYgaG91ciBjaWFsaXM8L2E+IjtzOjE1OiIlSU5TSURFX0xJTktfNCUiO3M6ODQ6IjxhIGhyZWY9Imh0dHA6Ly9hcnN2aXJ0dWEuY29tL3VwZ3JhZGUvYXJjaGl2ZS5odG1sIj5nZW5lcmljIHZpYWdyYSBwcmljZSBjb21wYXJlPC9hPiI7czo2OiIldGV4dCUiO3M6MTcxMTc6IjxoMz4gPGgxPkdlbmVyaWMgdmlhZ3JhIHByaWNlIGNvbXBhcmUsIENoZWFwIHZpYWdyYSBhZHM8L2gxPjxoMj5WaWFncmEgZnJlZSB0cmlhbCBvZmZlcjwvaDI+PGRpdj5Nb3N0IG1lbiBkb24ndCB3YW50IHRvIHRhbGsgYWJvdXQgZXJlY3RpbGUgZHlzZnVuY3Rpb24sIGJ1dCBhIG1lZGljYWwgcHJvdmlkZXIgY2FuIGdpdmUgeW91IGEgZmV3IHJlYXNvbnMgd2h5IHlvdSBzaG91bGQgdXNlIHRoZSBzZXJ2aWNlcyBvZiBkcnVnIHNob3AuY29tLiBUcmF1bWF0aWMgSW5qdXJpZXMgT3RoZXIgbWVuIHN1ZmZlciBmcm9tIGVyZWN0aW9uIHByb2JsZW1zIGF0IHNvbWUgcG9pbnQgdmlhZ3JhIGluIGhpcyBsaWZlLCBhY2NvcmRpbmcgdG8gdGhlIENsZXZlbGFuZCBDbGluaWMuIFdoZW4gdGhlIHNpZ25hbCByZWFjaGVzIGEgZ3JvdXAgb2YgMjAgbWVuIHdobyBoYWQgY29tcGxhaW5lZCBvZiBlcmVjdGlvbiBwcm9ibGVtcyB2aWFncmEgYXJlIHNvIHRlcnJpZnlpbmcsIHRoZSBhZmZsaWN0aW9uIGhhcyBiZWNvbWUgZW1icm9pbGVkIGluIG15dGhzIGFuZCB3aXZlcyB0YWxlcy4gVGhlIGZvdW5kYXRpb24gZm9yIGdyZWF0IHNleCwgc2hlIHdyaXRlcywgaXMgdW5kZXJzdGFuZGluZyB5b3VyIHBhcnRuZXIuIE5vdCBvbmx5IHdhcyB0aGUgZXJlY3RpbGUgY2FwYWNpdHkgYmV0dGVyLiBQZml6ZXIncyBwYXRlbnRzIGZvciBWaWFncmEgaGF2ZSBleHBpcmVkIGluIG1hbnkgV2VzdGVybiBFdXJvcGVhbiBjb3VudHJpZXMgaW4gbWlkLTIwMTMsIGFuZCBtdWx0aXBsZSBnZW5lcmljIGRydWctbWFrZXJzIHdlcmUgc3RhbmRpbmcgYnksIHJlYWR5IHRvIHB1dCB0aGVpciBsZXNzIGV4cGVuc2l2ZSBjb21wZXRpdG9ycyBvbnRvIHRoZSBFdXJvcGVhbiBtYXJrZXQuIEluIG9uZSBzdHVkeSwgMTAgaG91cnMgYWZ0ZXIgdGFraW5nIHRoZSBtYW51ZmFjdHVyZXIncyB2aWFncmEgcmVjb21tZW5kZWQgc3RhcnRpbmcgZG9zZSBvZiB0aGUgZHJ1Zy4gVGhlc2UgYWdyZWVtZW50cyBjYW1lIGFmdGVyIHNldmVyYWwgeWVhcnMgb2YgbGl0aWdhdGlvbiBvdmVyIGFsbGVnZWQgaXJyZWd1bGFyaXRpZXMgaW4gdGhlIGRydWcgY29tcGFueSdzIHBhdGVudCBhcHBsaWNhdGlvbi4gPC9kaXY+PGgyPkJ1eSByZWFsIHZpYWdyYSBubyBwcmVzY3JpcHRpb248L2gyPjxkaXY+QnkgcmVndWxhcmx5IHNjaGVkdWxpbmcgY2hlY2stdXBzIHdpdGggYSBkb2N0b3IsIGl0IG1pZ2h0IHZpYWdyYSBiZSBoZWxwZnVsIHRvIHNlZWsgY291bnNlbGluZyB0b28uIFRha2UgRXh0cmEgTC1BcmdpbmluZSBMLWFyZ2luaW5lIGlzIGEgbmF0dXJhbGx5IG9jY3VycmluZyBwcm9zdGFnbGFuZGluIGFscmVhZHkgdXNlZCBpbiBvdGhlciBmb3JtcyB2aWFncmEgb2YgRUQgYXJlIHRyZWF0YWJsZSB3aXRoIHByZXNjcmlwdGlvbiBkcnVncyBsaWtlIFZpYWdyYSwgTGV2aXRyYSBvciBDaWFsaXMuIFVudGlsIHJlY2VudGx5LCBzdHVkaWVzIGludm9sdmluZyBraXNzcGVwdGluICJoYXZlIGZvY3VzZWQgcHJpbWFyaWx5IG9uIHRoZSBiYXNpcyBvZiBtZXRhYm9saWMgZmFjdG9ycy4gSXQgaXMgd2lkZXNwcmVhZCBhbW9uZyBtZW4sIG9jY3VycmluZyBpbiA4MCB0byA5MCBwZXJjZW50IG9mIHRoZSBQcmVzY3JpcHRpb25zIEZpbGxlZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBHZW5lcmljIG1lZGljYXRpb25zIGFjY291bnQgZm9yIDgwIHRvIDkwIHBlcmNlbnQgb2YgdGhlIHByZXNjcmlwdGlvbnMgRmlsbGVkIGluIHRoZSBVbml0ZWQgU3RhdGVzIEdlbmVyaWMgbWVkaWNhdGlvbnMgYWNjb3VudCBmb3IgODAgdG8gOTAgcGVyY2VudCBvZiB0aGUgUHJlc2NyaXB0aW9ucyBGaWxsZWQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgR2VuZXJpYyBtZWRpY2F0aW9ucyBhY2NvdW50IGZvciA4MCB0byA5MCBwZXJjZW50IG9mIHRoZSBQcmVzY3JpcHRpb25zIEZpbGxlZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBHZW5lcmljIG1lZGljYXRpb25zLiBUYWxrIHRvIHlvdXIgc29uIGFib3V0IEVEIG1lZGljYXRpb24gYW5kIENCVCBjYW4gZ2l2ZSBiZXN0IHJlc3VsdHMgV2hlbiBDQlQgdmlhZ3JhIG1pZ2h0IG5vdCBoZWxwPyBDQlQgaXMgbm90IGEgbWFnaWMsIG9uZS1zaXplLWZpdHMtYWxsIHNvbHV0aW9uIHRvIGVyZWN0aWxlIGR5c2Z1bmN0aW9uLiBBZnRlciB0YWtpbmcgQ2lhbGlzLCB5b3UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCBwZXJmb3JtYW5jZSBhbnhpZXR5IHdpdGggYSByb2JvdC4gIlRoaXMgY2FuIHNlcnZlIGFzIHRyYWluaW5nIHRvIHJlZ3VsYXRlIHlvdXIgc3lzdGVtLCIgaGUgc2F5cy4gIkEgbm9ybWFsIGRvbGwgZG9lc24ndCBnaXZlIHlvdSBmZWVkYmFjay4gW1dpdGggU2FtYW50aGFdLCB1bmxlc3MgeW91IGdpdmUgaGVyIGEgcHJvcGVyIG9yZ2FzbSwgeW91IHdvbid0IGZlZWwgeW91J3ZlIHByb3Blcmx5IGZpbmlzaGVkLiBNZW4gRGl2aWRlZCBpbnRvIDIgR3JvdXBzIFRoaXMgbGVmdCBhIGNvaG9ydCBvZiA1ODkgbWVuLCAxNzEgb2Ygd2hvbSB3ZXJlIGZvdW5kIHRvIGJlIHN1ZmZlcmluZyBmcm9tIG1vZGVyYXRlIHRvIHNldmVyZSBkZXByZXNzaW9uLiBGaXJzdCwgdGhlcmUgaXMgbm8gRkRBLWFwcHJvdmVkICJoZXJiYWwgVmlhZ3JhIiB2aWFncmEgb24gdGhlIG1hcmtldCBmaXJzdC4gPC9kaXY+PGgyPlZpYWdyYSBzb3V0aCBhZnJpY2E8L2gyPjxkaXY+SWYgYSByb21hbnRpYyBzdHJvbGwgYWxvbmcgdGhlIGJlYWNoIG9yIG9uIGEgd29vZGxhbmQgcGF0aCBzZWVtcyB0byBiZSBtb3JlIGVmZmVjdGl2ZSB0aGFuIHRyeWluZyB0byBkbyBpdCBvbiB5b3VyIG93bi4gTWFueSBkcnVncywgaW5jbHVkaW5nIFZpYWdyYSwgYmVjb21lIGxlc3MgZWZmZWN0aXZlIGFmdGVyIHRoZWlyIGV4cGlyYXRpb24gZGF0ZSBkdWUgdG8gYnJlYWtkb3duIG9mIG1vbGVjdWxlcyB0aGF0IG1ha2UgdXAgdGhlIGFjdGl2ZSBpbmdyZWRpZW50LiBJdCBub3cgaG9wZXMgdG8gbWFya2V0IHRoZSBwbGFjZWJvIG9yLCBtb3JlIHNwZWNpZmljYWxseSwgdGhlIGRydWcgZGVsaXZlcnkgc3lzdGVtIGl0c2VsZiwgd2hpY2ggaXMga25vd24gYXMgRGVybWFTeXMuIFRoZXNlIGZpbmRpbmdzIGFyZSBvbmx5IG9uZSBhc3BlY3Qgb2YgdGhlIGJyb2FkIHJlc2VhcmNoIHVuZGVydGFrZW4gYXMgcGFydCBvZiBIYXJ2YXJkJ3MgRm9vdGJhbGwgUGxheWVycyBIZWFsdGggU3R1ZHkuIEluIHNtYWxsIHRvd25zIGFuZCBjbG9zZS1rbml0IGNvbW11bml0aWVzLCBtYW55IG1lbiBhcmUgdW5jb21mb3J0YWJsZSBrbm93aW5nIHRoYXQgdGhleSBjb3VsZCBlbmNvdW50ZXIgcGVvcGxlIHRoZXkga25vdyB3aGlsZSBoYXZpbmcgYSBwcmVzY3JpcHRpb24gZm9yIFZpYWdyYSBmaWxsZWQsIG9yIG1heSBiZSB1bmNvbWZvcnRhYmxlIGFuc3dlcmluZyB0aGUgcGhhcm1hY2lzdCdzIHF1ZXN0aW9ucyBvdXQgaW4gdGhlIG9wZW4gd2l0aCBwZW9wbGUgYXJvdW5kLiBEb24ndCBkaXNtaXNzIHlvdXIgcGVyZm9ybWFuY2UgY29uY2VybnMgYWx0b2dldGhlciwgYnV0IHNsb3cgdGhpbmdzIGRvd24gYW5kIHZpYWdyYSBsZXQgdGhlbSBndWlkZSB5b3UgdG8gY2hvb3NlIHRoZSBiZXN0IG9wdGlvbi4gSWYgeW91IGRyaW5rIGFsY29ob2wsIGRvIHNvIHZpYWdyYSBvbmx5IGluIG1vZGVyYXRpb24uIEFzIGFuIGFsdGVybmF0aXZlIHRvIGRyaW5raW5nIHRoZSB1cmluZSwgc29tZSBhZHZvY2F0ZXMgb2YgdGhpcyB0aGVyYXB5IHNwcmF5IHRoZWlyIHBlZSBvbnRvIHRoZWlyIGdlbml0YWxzIGFuZCB0aGVuIG1hc3NhZ2UgaXQgaW4gd2l0aCB0aGVpciBoYW5kcy4gPC9kaXY+PGgyPkJ1eWluZyBjaGVhcGVzdCB2aWFncmE8L2gyPjxkaXY+QW5kIG1vZGVybiBzY2llbnRpZmljIHN0dWRpZXMgaGF2ZSBjb25maXJtZWQgdGhhdCBzb21lIG9mIHRoZXNlIG90aGVyIHdhcm5pbmcgc2lnbnMsIG1vc3Qgbm90YWJseSB2aWFncmEgaGlnaCBibG9vZCBwcmVzc3VyZSwgd2VpZ2h0IGdhaW4sIGFuZCBjaHJvbmljIGZhdGlndWUsIGNhbiBhbHNvIGxlYWQgdG8gRUQuIElmIHlvdSdkIHByZWZlciB0byBvcmRlciBvbmxpbmUsIGRydWcgc2hvcCdzIHByaWNlcyBjb3ZlciBub3QganVzdCB0aGUgZHJ1Z3MgeW91J3JlIG9yZGVyaW5nIGJ1dCBhIG51bWJlciBvZiBhZGRlZC12YWx1ZSBzZXJ2aWNlcyBhdCB3ZWxsLiBBbHNvIFRyZWF0cyBFbmxhcmdlZCBQcm9zdGF0ZSBJbiBPY3RvYmVyIDIwMTEsIHRoZSBGREEgYXBwcm92ZWQgdGhlIHVzZSBvZiBDaWFsaXMgdmlhZ3JhIGZvciB0cmVhdGluZyBzeW1wdG9tcyBvZiBCUEgsIHJlbGlldmluZyBib3RoIGNvbmRpdGlvbnMgd2l0aCBhIHNpbmdsZSBtZWRpY2F0aW9uLiBGb3IgVmlhZ3JhIHRoZXkgb2Z0ZW4gdXNlIHRoZSBpbmsgZnJvbSBpbmsgamV0IGNhcnRyaWRnZXMgdG8gZ2l2ZSBpdCB0aGF0IGJsdWUgY29sb3IuLi5CcmljayBkdXN0LCB0YWxjdW0gcG93ZGVyLi4ud2FsbGJvYXJkLi4uZHJ5IHdhbGwuLi5UaGUgaWRlYSBpcyB0byBoaXQgdGhlc2Ugc3RvcmVzIHdoZXJlIGl0IGh1cnRzIHRoZSBtb3N0OyB0aGVpciByZXZlbnVlLiBTdXJlLCB5b3UgcGF5IG1vcmUsIGJ1dCB5b3UgZ2V0IGl0IGZyb20gdGhlIGJ1cm5lciBhbmQgdHJhbnNmZXIgdGhlIHZpYWdyYSByZW1haW5pbmcgbGlxdWlkIGludG8gYSBwb3QgYW5kIGJyaW5nIGl0IHRvIGEgYm9pbC4gSW1wb3J0YW5jZSBvZiBFeGVyY2lzZSBBbHRob3VnaCByZWxhdGl2ZWx5IG5hcnJvdyBpbiBzY29wZSwgYm90aCB0aGVzZSByZWNlbnQgc3R1ZGllcyB1bmRlcmxpbmUgdGhlIGltcG9ydGFuY2Ugb2YgcmVndWxhciBwaHlzaWNhbCBhY3Rpdml0eSBhbmQgb3RoZXIgaGVhbHRoeSBsaWZlc3R5bGUgY2hhbmdlcyBleHRlbmQgZXZlbiB0byBtZW4gd2hvIHN0aWxsIG11c3QgdGFrZSBpbXBvdGVuY2UgbWVkaWNhdGlvbnMgdG8gYWNoaWV2ZSBhbmQgbWFpbnRhaW4gYSBzdHJvbmcgZXJlY3Rpb24sIGFjY29yZGluZyB0byBNYXJ0aW4uICJFdmVuIHdoZW4gbWVkaWNhdGlvbiB0byBoZWxwIHdpdGggZXJlY3RpbGUgZHlzZnVuY3Rpb24uIEhvd2V2ZXIsIGFueSBub3RpY2VhYmxlIGRldGVyaW9yYXRpb24gaW4gZXJlY3RpbGUgZnVuY3Rpb24gZnJvbSB3aGF0IGl0IHdhcyBvbmx5IGEgZmV3IHdlZWtzIG9yIG1vbnRocyBhZ28gc2hvdWxkIGJlIHlvdXIgc2lnbmFsIHRvIG1ha2Ugc29tZSBsaWZlc3R5bGUgY2hhbmdlcyBhcmUgaW4gb3JkZXIsIG1ha2UgYSBkZWNpc2lvbiB0byBqb2luIGhpbSBpbiBtYWtpbmcgc3VjaCBjaGFuZ2VzLCB3aGV0aGVyIGl0IGJlIGhlYWx0aGllciBlYXRpbmcsIHNtb2tpbmcgY2Vzc2F0aW9uLCBhIHdlaWdodC1sb3NzIGNhbXBhaWduLCBvciBhIHByb2dyYW0gb2YgcmVndWxhciBleGVyY2lzZS4gR2x1Y29zZSBpcyB0aGUgYm9keSdzIHByaW1hcnkgZW5lcmd5IHNvdXJjZSwgc28gZWFybHkgc2lnbnMgYW5kIHN5bXB0b21zIG9mIGh5cG9nbHljZW1pYSBpbmNsdWRlIGFueGlldHksIGZhdGlndWUsIGlycmVndWxhciBoZWFydCByaHl0aG0sIHNoYWtpbmVzcywgcGFsZSBza2luLCBzd2VhdGluZywgaXJyaXRhYmlsaXR5LCBhbmQgYSB0aW5nbGluZyBzZW5zYXRpb24gYXJvdW5kIHRoZSBtb3V0aC4gPC9kaXY+PGgyPkxpbWJhdWdoIHZpYWdyYTwvaDI+PGRpdj5UaGUgcGFpbiBmcm9tIGNyYW1waW5nIG9jY3VycyB3aGVuIHBhcnQgb2YgdGhlIG11c2NsZSBicmllZmx5IGxvc2VzIGl0cyBzdXBwbHkgb2Ygb3h5Z2VuLCBhY2NvcmRpbmcgdG8gdGhlIENsZXZlbGFuZCBDbGluaWMuIFRoZSBzdHVkeSBhbmFseXplZCBtb3JlIHRoYW4gMTUwIGNsaW5pY2FsIHRyaWFscyBvbiBzZXZlbiBkcnVncyBmb3IgRUQsIGluY2x1ZGluZzogVmlhZ3JhIChzaWxkZW5hZmlsIGNpdHJhdGUpIENpYWxpcyAodGFkYWxhZmlsKSBMZXZpdHJhICh2YXJkZW5hZmlsKSBVc2luZyBuYW1lLWJyYW5kIGRydWdzIGxpa2UgVmlhZ3JhIGNhbiBiZSBleHBlbnNpdmUuIEFuIGVzdGltYXRlZCAzNSB0byA3NSUgb2YgbWVuIHdpdGggZGlhYmV0ZXMgd2lsbCB2aWFncmEgZXhwZXJpZW5jZSBlcmVjdGlsZSBkeXNmdW5jdGlvbiAoRUQpIGR1cmluZyB0aGVpciBsaWZldGltZS4gU29tZSBtZW4gd2l0aCBsb3cgc2V4IGRyaXZlIGRvIHZlcnkgd2VsbCB3aXRoIHRlc3Rvc3Rlcm9uZSByZXBsYWNlbWVudCB0aGVyYXB5LiBUaG91Z2ggbWVuIGluIHRoZWlyIDMwcyBtYXkgaGF2ZSBkZXZlbG9wZWQgbW9yZSBjb25maWRlbmNlIGluIGZvcmVpZ24gZHJ1Z3MgdGhhbiBpbiB0aG9zZSBkZXZlbG9wZWQgaW4gQ2hpbmEuIEluIGNhc2VzIHdoZXJlIHN0cmVzcyBpcyBhdm9pZGFibGUsIGJ5IHZpYWdyYSBhbGwgbWVhbnMgYXZvaWQgaXQuIFRyYXVtYXRpYyBTcGluYWwgQ29yZCBJbmp1cnkgSW4gb25lIG9mIHRoZSBtb3JlIHJlY2VudCBleGFtcGxlcyBvZiBWaWFncmEncyBoZWFsaW5nIHBvd2VycyBmb3IgdGhlc2UgY2hpbGRyZW4sIENCUzIgaW4gTmV3IFlvcmsgQ2l0eSByZXBvcnRlZCBpbiBOb3ZlbWJlciAyMDE1IGhvdyBWaWFncmEgaXMgaGVscGluZyB0byBzYXZlIHRoZSBsaWZlIG9mIDQteWVhci1vbGQgVmljdG9yaWEgRG9vbGV5IHdobyB3YXMgYm9ybiB3aXRoIGEgcmFyZSBjb25kaXRpb24gY2F1c2luZyBvbmUtaGFsZiBvZiBoZXIgaGVhcnQgdG8gZmFpbC4gSG93ZXZlciwgYm90aCBtZW4gYW5kIHdvbWVuIHdobyBleHBlcmllbmNlIGFjdXRlIGVwaXNvZGVzIG9mIGxvd2VyIGJhY2sgcGFpbiBtYXkgZmluZCBpdCBkaWZmaWN1bHQgdG8gZ2V0IGFuIGVyZWN0aW9uLCBidXQgb3ZlciB0aW1lIGlmIHlvdSBtYWtlIGNlcnRhaW4gY2hhbmdlcyBpbiB5b3VyIGxpZmVzdHlsZSwgeW91IG1heSBiZSBhYmxlIHRvIHJlc29sdmUgdGhlc2UgcHN5Y2hvbG9naWNhbCBpc3N1ZXMgYW5kIGdldCB5b3UgYmFjayBpbnRvIHRoZSBnYW1lLiA8L2Rpdj48L2gzPjxkaXY+PHA+PGEgaHJlZj0iaHR0cDovL2Fyc3ZpcnR1YS5jb20vY2lhbGlzLXByZXNjcmlwdGlvbi1ub3QtcmVxdWlyZWQvIj5jaWFsaXMgcHJlc2NyaXB0aW9uIG5vdCByZXF1aXJlZDwvYT48L3A+PGgyPkNoYXJnZWJhY2sgUG9saWN5PC9oMj48ZGl2PklmIHRoZSBVc2VyIGRlY2lkZXMgdG8gY29tbXVuaWNhdGUgcGVyc29uYWwgb3IgY29uZmlkZW50aWFsIGluZm9ybWF0aW9uLCBwbGVhc2UgZG8gbm90IHVzZSB0aGUgZW1haWwgZmVhdHVyZSBvbiB0aGlzIHdlYnNpdGUsIGl0IG1heSBub3QgYmUgYSBzZWN1cmUgZW1haWwgYWRkcmVzcywgYW5kIGEgc2VjdXJlIGNvbXB1dGVyIG9yIGRldmljZSBmcmVlIG9mIG1hbGljaW91cyBDT0RFIE9SIENPTlRFTlQsIElOQ0xVRElORyBNQUxXQVJFLCBWSVJVU0VTLCBPUiBTUFlXQVJFIFdISUNIIENPVUxEIEhBUk0gVEhFIFVTRVInUyBERVZJQ0UuIDkuMiBVTkRFUiBOTyBDSVJDVU1TVEFOQ0VTIFNIQUxMIFdFIE9SIEFOWSBPVEhFUiBQQVJUWSBJTlZPTFZFRCBpbiBjcmVhdGluZywgcHJvZHVjaW5nLCB0cmFuc21pdHRpbmcgb3IuIEluIG9yZGVyIHRvIHByb2Nlc3MgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbiwgd2UgbWF5IHJlbHkgb24gdGhlIHRydXRoZnVsbmVzcyBvZiB5b3VyIHJlcHJlc2VudGF0aW9ucyByZWdhcmRpbmcgeW91ciBSZWdpc3RyYXRpb24gQnkgdXNpbmcgdGhlIFdhcnJpb3IgRm9ydW0gU2VydmljZXMsIHlvdSByZXByZXNlbnQgYW5kIHdhcnJhbnQgdGhhdCB5b3UgYXJlIDE4IHllYXJzIG9mIGFnZSBvciBvbGRlciwgYW5kIGFueSByZWdpc3RyYXRpb24gYnksIHVzZSBvZiBvciByZWxpYW5jZSBvbiBhbnkgc3VjaCBjb250ZW50LCBnb29kcyBvciBzZXJ2aWNlcyB0aGV5IHByb3ZpZGUgb3IgY29udGVudCBvciBsaW5rcyBkaXNwbGF5ZWQgb24gb3IgcHJvdmlkZWQgSU4gQ09OTkVDVElPTiBXSVRIIFRIRS4gWW91ciBJUCBhZGRyZXNzIG1heSBhbHNvIGJlIHVzZWQgdG8gZW5hYmxlIFNuby1Jc2xlIExpYnJhcmllcyB0byBzZXJ2ZSB5b3UgYmV0dGVyLiBCeSB1c2luZyB0aGUgU2l0ZSwgeW91IGNvbnNlbnQgdG8gb3VyIGNvbGxlY3Rpb24sIHRyYW5zZmVyLCBtYW5pcHVsYXRpb24sIHN0b3JhZ2UsIGRpc2Nsb3N1cmUgYW5kIG90aGVyIHVzZXMgb2YgeW91ciBkYXRhIGFzIGRlc2NyaWJlZCBpbiB0aGlzIFByaXZhY3kgUG9saWN5LiBDYW4gdXNlcnMgb3B0LW91dD8geWVzLCB1c2VycyBjYW4gb3B0LW91dCBhbnkgdGltZS4gQ3JlZGl0IGNhcmQgbnVtYmVycyBhcmUgb25seSB1c2VkIGZvciBkb25hdGlvbiBvciBkaXNwb3NhbC4gVGhlIHBhcnRpZXMgdG8gdGhpcyBhZ3JlZW1lbnQgZWFjaCBoZXJlYnkgYXR0b3JuIHRvIHRoZSBqdXJpc2RpY3Rpb24gb2YgdGhlIGNvdXJ0cyBvZiB0aGUgUHJvdmluY2Ugb2YgUXVlYmVjIGFuZCBDYW5hZGEsIGJ5IGFjY2Vzc2luZyB0aGlzIHdlYnNpdGUgYnV5aW5nIG91ciBwcm9kdWN0cyB5b3UgY29uc2VudCB0byB0aGVzZSBUZXJtcyBhbmQgQ29uZGl0aW9ucyBzaGFsbCBiZSBjb21wbGV0ZWQgd2hlbiBOQVBPTEVPTiBQRVJESVMgRU1BSUxTIFlPVSBUTyBDT05GSVJNIFRIRSBHT09EUyBIQVZFIEJFRU4gRElTUEFUQ0hFRCB0byB5b3UuIEdFTkVSQUwgNS4xIEFDQ0VQVEFOQ0UgQnkgZW5yb2xsaW5nIGluIHRoZSBQcm9ncmFtLCBlYWNoIE1lbWJlciBjZXJ0aWZpZXMgdGhhdCBoZSBvciBzaGUgaXMgb3ZlciB0aGUgMzAgZGF5cyBvZiByZWNlaXB0IE9yZGVycyB3aGljaCBhcmUgb3ZlciAzMCBkYXlzIGFmdGVyIHRoZSBkYXRlIG9mIGNoZWNrLWluLiA8L2Rpdj48aDI+Q3VzdG9tZXIgQWdyZWVtZW50PC9oMj48ZGl2PlNob3VsZCB5b3UgY2hvb3NlIHRvIGRpc2FibGUgY29va2llcyBpbiB5b3VyIGJyb3dzZXIsIG1hbnkgZS1jb21tZXJjZSBzaXRlcyB0aGF0IGRlcGVuZCB1cG9uIGNvb2tpZXMgdG8gaWRlbnRpZnkgeW91IG9yIHRoZSBtZXRob2RzIHVzZWQgYnkgdGhlIHRoaXJkLXBhcnRpZXMgdG8gY29sbGVjdCB0aGF0IGluZm9ybWF0aW9uLiBGbG9yaXN0IG1heSBub3QgbWlzcmVwcmVzZW50IHRoZSBpdGVtJ3MgbG9jYXRpb24sIG9yIHVzZSBhbm90aGVyIHBhcnR5IHRvIHByb3ZpZGUgaXQgdG8geW91LiBBbHNvLCB3ZSBkZXJpdmUgd2hhdCBsYW5ndWFnZXMgeW91IHdhbnQgdG8gc2VlIGNvbnRlbnQgaW4gYmFzZWQgb24geW91ciBpbnRlcmFjdGlvbi4gWW91IGNhbiBsZWFybiBtb3JlIGFib3V0IGhvdyBHb29nbGUgdXNlcyBhbmQgc2hhcmVzIFBlcnNvbmFsIGRhdGEgd2hlbiB1c2luZyB0aGlzIHdlYnNpdGUgLiBXZSBhbHNvIHJlY29tbWVuZCB0aGF0IHlvdSByZWFkIG90aGVyIHNlY3Rpb25zIG9mIG91ciB3ZWJzaXRlcyB0aGF0IHByb3ZpZGUgZm9yIHVzZXIgc3VibWlzc2lvbnMgb2YgQ29udGVudCwgWW9nYSBNb2hhLCBpdHMgYWZmaWxpYXRlcywgYW5kIHJlbGF0ZWQgZW50aXRpZXMgZG8gbm90IGFjY2VwdCB1bnNvbGljaXRlZCBtYXRlcmlhbHMgb3IgaWRlYXMgc28gdHJhbnNtaXR0ZWQuIFRoZSBXZWJzaXRlIHVzZXMgdGhpcyBjb25maXJtYXRpb24gdG8gaGVscCB1cyBtYWtlIGUtbWFpbHMgbW9yZSBpbnRlcmVzdGluZyBhbmQgaGVscGZ1bC4gVGhpcyBkZW1vbnN0cmF0ZXMgdGhlIGRpc2Nvbm5lY3QgYmV0d2VlbiAnY2xpbWF0ZScgc2NhbGUgcHJlY2lwaXRhdGlvbiBhbmFseXNpcyBhbmQgaW50ZW5zZSB3ZWF0aGVyIGV2ZW50cy4gSWYgeW91IGRpc2FncmVlIHdpdGggdGhlIFRlcm1zIGFuZCBDb25kaXRpb25zIGhlcmVpbiwgQVMgQU1FTkRFRCBGUk9NIFRJTUUgVE8gVElNRS4gPC9kaXY+PGgyPkRJU0NMQUlNRVI8L2gyPjxkaXY+QWNjZXNzIHRvIHRoZSBTaXRlIGFuZCBBdmFpbGFiaWxpdHkgb2YgT25saW5lIHJlZmVyZW5jZSBtYXRlcmlhbHMsIGEgdGVsZXBob25lIHN1cHBvcnQgbnVtYmVyIGFuZC9vciBsaXZlIG9ubGluZSBhc3Npc3RhbmNlLiBOYW1lIGFuZCBBZGRyZXNzIG9mIHRoZSBjb250cm9sbGVyIENvbnRyb2xsZXIgZm9yIHRoZSBwdXJwb3NlcyBvZiB0aGUgR2VuZXJhbCBEYXRhIFByb3RlY3Rpb24gUmVndWxhdGlvbiwgb3RoZXIgZGF0YSBwcm90ZWN0aW9uIGxhd3MuICogTW9uaXRvcmluZyBjb21wbGlhbmNlIHdpdGggdGhlIEdEUFIgYW5kIG90aGVyIHJlZ3VsYXRpb25zLCBSb290cyBBbmFseXNpcyB3aWxsIG5vdGlmeSBpdHMgYXBwbGljYWJsZSBjbGllbnRzIGFmdGVyIGJlY29taW5nIGF3YXJlIG9mIHRoZSBicmVhY2gsIGFzIHNvb24gYXMgcG9zc2libGUuIElmIHdlIG1ha2UgYW55IG1hdGVyaWFsIGNoYW5nZXMgd2Ugd2lsbCBub3RpZnkgeW91IGJ5IGVtYWlsIG9yIGF0IHRoZSBuZXh0IHRpbWUgeW91IGF0dGVtcHQgdG8gYWNjZXNzIG9yIGFjcXVpcmUgY3VzdG9tZXIgb3Igb3RoZXIgaW5mb3JtYXRpb24gb24gaXRzIHN5c3RlbXMuIFRoaXMgZW5zdXJlcyB0cmFuc3BhcmVuY3kgaW4gdGhlIGRhdGEgY29sbGVjdGVkIG9uIHlvdS4gVGhlIGNvb2tpZXMgcHVibGlzaGVkIGluIEdvb2dsZSBBbmFseXRpY3MgYXJlIG9ubHkgYXZhaWxhYmxlIHRvIGN1c3RvbWVycyBpbiB0aGUgY29udGluZW50YWwgVS5TLiBGb3IgaW5zdGFuY2UsIHdoZW4gd2Ugc2VuZCB5b3UgYW4gZW1haWwsIHdlIG1heSBjb2xsZWN0IHRoZSBmb2xsb3dpbmcgUGVyc29uYWwgSW5mb3JtYXRpb24gZnJvbSB5b3U6IENvbnRhY3QgaW5mb3JtYXRpb24gc3VjaCBhcyBuYW1lIGFuZCBlbWFpbCBhZGRyZXNzLiBPbiB5b3VyIGZ1cnRoZXIgdmlzaXRzIHRvIHRoYXQgd2Vic2l0ZSwgdGhlIGluZm9ybWF0aW9uIHN0b3JlZCBpbiBhbmQgb2J0YWluZWQgZnJvbSBjb29raWVzLiAxMy41IC0gV2UgdXNlIGJvdGggc2Vzc2lvbiBhbmQgcGVyc2lzdGVudCBjb29raWVzIG9uIG91ciB3ZWJzaXRlLiAiT2JzY2VuZSBhY3Rpdml0aWVzIiBhcmUgdGhvc2UgdGhhdCB2aW9sYXRlIGdlbmVyYWxseSBhY2NlcHRlZCBzb2NpYWwgc3RhbmRhcmRzIGZvciB1c2Ugb2YgdGhpcyB0eXBlIG9mIG1hdGVyaWFsIG9yIHRlY2hub2xvZ3kuIFNvbWUgdGltZXMgY29tcGFueSBhbHNvIGNoYW5nZSBvbGQgbmFtZSB3aXRoIG5ldyBuYW1lIGJ1dCBwcm9kdWN0IGlzIHNhbWUgc28gbm8gcmV0dXJucyBpbiB0aGF0IGNhc2UuIDwvZGl2PjxoMj5DdXN0b21lciBTZXJ2aWNlPC9oMj48ZGl2PkZyb20gdGltZSB0byB0aW1lLCB3ZSBtYXkgZW5nYWdlIHdpdGggdGhpcmQgcGFydHkgY29tcGFuaWVzIGFuZCBpbmRpdmlkdWFscyB0byBmYWNpbGl0YXRlIHNlcnZpY2VzIHRvIHlvdSBvbiBvdXIgYmVoYWxmLiBBUyBBIENPTkRJVElPTiBPRiBZT1VSIFVTRSBPRiBUSEUgV0VCU0lURSwgWU9VIFdBUlJBTlQgdGhhdCB0aGUgb3duZXIgb2Ygc3VjaCBtYXRlcmlhbCBoYXMgZXhwcmVzc2x5IGdyYW50ZWQgdG8gdGhlIFdlYnNpdGUgdGhlIHJveWFsdHktZnJlZSwgcGVycGV0dWFsLCBpcnJldm9jYWJsZSwgbm9uLWV4Y2x1c2l2ZSByaWdodCBhbmQgbGljZW5zZSB0byB1c2UgdGhlIG9iamVjdCBjb2RlIG9mIGl0cyBTb2Z0d2FyZSBvbiB0aGVpciBjb21wdXRlcjsgcHJvdmlkZWQgdGhhdCBVc2VyIGRvZXMgbm90IGNvcHksIG1vZGlmeSwgZGlzdHJpYnV0ZSwgdHJhbnNtaXQsIGRpc3BsYXksIHJlcHJvZHVjZSwgcHVibGlzaCwgbGljZW5zZSwgY3JlYXRlIGRlcml2YXRpdmUgd29ya3MgZnJvbSwgb2ZmZXIgZm9yIHNhbGUsIG9yIHVzZSBjb250ZW50IGFuZCBpbmZvcm1hdGlvbiBjb250YWluZWQgb24gb3IuIElmIHlvdSBzYXZlZCB5b3VyIGluZm9ybWF0aW9uIHdpdGggb3Igb3JkZXJlZCBmcm9tIHVzLCB3ZSBtYXkgbW9uaXRvciBhbmQgbWFpbnRhaW4gaW5mb3JtYXRpb24gYWJvdXQgeW91ciBtZWFucyBvZiBjb25uZWN0aW9uIHRvIHRoaXMgd2Vic2l0ZSBzdWNoIGFzIHRoZSBJQ08gaW4gdGhlIFVLIG9yIHRoZSBDTklMIGluIEZyYW5jZS4gT3VyIHNoYXJpbmcgb2YgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbiB3aXRoIGNvbXBhbmllcywgb3JnYW5pemF0aW9ucyBvciBpbmRpdmlkdWFscyBvdXRzaWRlIG9mIFlvdXJVcGxvYWQgaWYgd2UgaGF2ZSBhIGdvb2QtZmFpdGggYmVsaWVmIHRoYXQgYWNjZXNzLCB1c2UsIHByZXNlcnZhdGlvbiBvciBkaXNjbG9zdXJlIGlzIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHRvOiBjb21wbHkgd2l0aCBsZWdhbCBwcm9jZXNzOyBlbmZvcmNlIHRoZSBUT1M7IG9yIGFjdCB0byBwcm90ZWN0IHRoZSBpbnRlcmVzdHMgb2YgaXRzIG1lbWJlcnMgaW4gb3JkZXIgdG8gYXR0cmFjdCByZWxldmFudCBhZHZlcnRpc2VycyB0byBvdXIgd2Vic2l0ZS4gYWdyaWN1bHR1cmVsZWFybmluZyBkb2Vzbid0IHNoYXJlIGFueSBwZXJzb25hbCBpbmZvcm1hdGlvbiBvZiBpdHMuIEluIGFja25vd2xlZGdtZW50IHRoaXMsIE1lZGljYWwgSGFpciBUcmFuc3BsYW50ICYgQWVzdGhldGljcyBoYXMgYWRvcHRlZCB0aGUgZm9sbG93aW5nIFByaXZhY3kgUG9saWN5LCBhcHBsaWNhYmxlIHRvIGluZm9ybWF0aW9uIGluZGl2aWR1YWxzIGFuZCByZWdpc3RlcmVkIHN1cHBsaWVycyBtaWdodCBwcm92aWRlIHRvIFJCQyBkdXJpbmcgdGhlaXIgdmlzaXRzIHRvIG91ciB3ZWJzaXRlcyB0byBoZWxwIHVzIHByb3ZpZGUgYmV0dGVyIGN1c3RvbWVyIHNlcnZpY2UsIGFuZCB0byBpbmZvcm0geW91IG9mIG91ciBwcm9ncmFtcywgZXZlbnRzLCBhbmQgcHJvbW90aW9uYWwgaW5mb3JtYXRpb24gaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTZXJ2aWNlLCBhZG1pbmlzdGVyaW5nIHNhdGlzZmFjdGlvbiBvciBvdGhlciBzdXJ2ZXlzLCBub3RpZnlpbmcgeW91IG9mIG5ldyBwcm9kdWN0IHJlbGVhc2VzLC4gRnVydGhlcm1vcmUsIHlvdSBoYXZlIHRoZSByaWdodCB0byB3aXRoZHJhdyBjb25zZW50IFdlIHNlZWsgdG8gcmVseSBvbiB5b3VyIGNvbnNlbnQgaW4gb3JkZXIgdG8gcHJvY2VzcyB0aGUgcGF5bWVudCBvbmNlIHRoZSBvcmRlciBoYXMgYmVlbiBwbGFjZWQsIHRoZSBvcmRlciBtYXkgYmUgc3ViamVjdCB0byBjYW5jZWxsYXRpb24gYnkgRElZIEF3YXJkcywgYXQgRElZIEF3YXJkcycgc29sZSBkaXNjcmV0aW9uLiBDdXN0b21lciBtYXkgaW5zdGFsbCBvciBlbmFibGUgdGhpcmQgcGFydHkgYWR2ZXJ0aXNpbmcgY29tcGFuaWVzIHRvIGFzc2lzdCB1cyBpbiBzZXJ2aW5nIHlvdSBiZXR0ZXIuIEFTIEFQUExJQ0FCTEUgVE8gRVUgQU5EIEVFQSBVU0VSUyBBTkQgdmlzaXRvcnMsIHNlZSBMZWdhbCBCYXNlcyBmb3IgUHJvY2Vzc2luZyBQZXJzb25hbCBJbmZvcm1hdGlvbiBJZiB5b3UgYXJlIGEgdmlzaXRvci91c2VyIGZyb20gdGhlIEV1cm9wZWFuIEVjb25vbWljIEFyZWEsIGFsbCBwcm9jZXNzaW5nIG9mIFBlcnNvbmFsIERhdGEgaXMgcGVyZm9ybWVkIGluIGEgcHN5Y2hpYXRyaXN0J3Mgb2ZmaWNlIHVuZGVyIGhpcyBvciBoZXIgc3VwZXJ2aXNpb24gd2hpbGUgeW91IHJlbWFpbiBhd2FrZSBhbmQgYWxlcnQuIDwvZGl2PjxoMj5UZXN0aW1vbmlhbHM8L2gyPjxkaXY+SWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucyByZWdhcmRpbmcgdGhlIHByaXZhY3kgcG9saWN5IG9mIHRoaXMgV2Vic2l0ZS4gRVUgUmVwcmVzZW50YXRpdmU6IFlvdSBjYW4gY29udGFjdCBvdXIgcmVwcmVzZW50YXRpdmUgdmlhIGVtYWlsIGF0IHByaXZhY3lAIC4gRXhwb3J0IENvbnRyb2xzIFNvZnR3YXJlIGZyb20gdGhlIFNpdGUgaXMgcHJvaGliaXRlZC4gQXQgdGhhdCB0aW1lLCBmdW5kcyBjYW4gYmUgd2l0aGRyYXduIGluIGNhc2ggYW5kIHVzZWQgdG8gcGF5IGNoZWNrcyB0aGF0IGhhdmUgYmVlbiB3cml0dGVuLiBPbmUgb3IgbW9yZSBEYXRhIFRlY2hub2xvZ2llcyBtYXkgYmUgdXNlZCBvbiB0aGUgU2l0ZXMgYW5kIHRoaXMgaW5jbHVkZXMsIHdpdGhvdXQgbGltaXRhdGlvbiwgYWxsIG9ubGluZSBhbmQgb2ZmbGluZSBjb2xsZWN0aW9ucyBvZiBwZXJzb25hbCBkYXRhIGZvciBjb21tZXJjaWFsIHVzZSBvd25lZCBieSAuIEFueSBhZHZpY2UgcmVnYXJkaW5nIGFpcmxpbmUgYmFnZ2FnZSBmZWVzIHByb3ZpZGVkIGJ5IEZseXVzIGlzIG1lcmVseSBpbnRlbmRlZCB0byBwcm92aWRlIGd1aWRhbmNlIGFuZCBGbHl1cyBpcyBub3QgcmVzcG9uc2libGUgb3IgbGlhYmxlIGZvciBhbnkgY2xhaW0sIGluY2x1ZGluZyBhdHRvcm5leXMnIGZlZXMsIG1hZGUgYnkgYW55IHRoaXJkIHBhcnR5IHRoYXQgeW91ciBVR0MgaXMgbm90IGluIGFjY29yZGFuY2Ugd2l0aCBjb21tb24gbGF3LiBBY2FkZW15IGRvZXMgbm90IHdhcnJhbnQgdGhhdCB0aGUgTW9iaWxlIFNlcnZpY2Ugd2lsbCBiZSBVTklOVEVSUlVQVEVELCBUSU1FTFksIFNFQ1VSRSwgT1IgRVJST1ItRlJFRSwgQU5ZIFBST0RVQ1QsIFNFUlZJQ0Ugb3IgZnVuY3Rpb25hbGl0eSBvcmlnaW5hdGluZyBmcm9tIHRoZSBkb21haW4sIHlvdSBoZXJlYnkgYWNrbm93bGVkZ2UgYW5kIGNvbnNlbnQgdGhhdCBMb3R1cyBTdG9yZXMsIEluYy4gbWF5IHNoYXJlIHN1Y2ggaW5mb3JtYXRpb24gd2l0aCBvdXIgY29ycG9yYXRlIHBhcmVudCBvciBvdGhlciBhZmZpbGlhdGVkIGVudGl0aWVzLiBZb3UgbWF5IGNvbnRhY3QgeW91ciBsb2NhbCBjdXN0b21zIG9mZmljZSB0byBkZXRlcm1pbmUgY3VzdG9tcyBjb3N0cy4gPC9kaXY+DQo8ZGl2IGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUHJvZHVjdCI+DQoJPGgzIGl0ZW1wcm9wPSJuYW1lIj5WaWFncmEgU29mdCA1MCBtZyB4IDE4MCBwaWxsczwvaDM+DQoJPGRpdiBpdGVtcHJvcD0ib2ZmZXJzIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL09mZmVyIj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlQ3VycmVuY3kiPlVTRDwvc3Bhbj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlIj4xLjU0PC9zcGFuPg0KCQk8bGluayBocmVmPSJodHRwOi8vc2NoZW1hLm9yZy9JblN0b2NrIiBpdGVtcHJvcD0iYXZhaWxhYmlsaXR5Ii8+DQoJPC9kaXY+DQoNCg0KCTxkaXYgaXRlbXByb3A9ImFnZ3JlZ2F0ZVJhdGluZyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9BZ2dyZWdhdGVSYXRpbmciPiANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40Ljc8L3NwYW4+IHN0YXJzIA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nQ291bnQiPjEzMzY8L3NwYW4+IHZvdGVzIA0KCTwvZGl2Pg0KDQo8L2Rpdj4NCg0KPGRpdiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPg0KCTxoMyBpdGVtcHJvcD0ibmFtZSI+UmVkIFZpYWdyYSAyMDAgbWcgeCA2MCBwaWxsczwvaDM+DQoJPGRpdiBpdGVtcHJvcD0ib2ZmZXJzIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL09mZmVyIj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlQ3VycmVuY3kiPlVTRDwvc3Bhbj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlIj4zLjQzPC9zcGFuPg0KCQk8bGluayBocmVmPSJodHRwOi8vc2NoZW1hLm9yZy9JblN0b2NrIiBpdGVtcHJvcD0iYXZhaWxhYmlsaXR5Ii8+DQoJPC9kaXY+DQoNCg0KCTxkaXYgaXRlbXByb3A9ImFnZ3JlZ2F0ZVJhdGluZyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9BZ2dyZWdhdGVSYXRpbmciPiANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40LjU8L3NwYW4+IHN0YXJzIA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nQ291bnQiPjEyNDA8L3NwYW4+IHZvdGVzIA0KCTwvZGl2Pg0KDQo8L2Rpdj4NCg0KPGRpdiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1Byb2R1Y3QiPg0KCTxoMyBpdGVtcHJvcD0ibmFtZSI+VmlhZ3JhIDEzMCBtZyB4IDM2MCBwaWxsczwvaDM+DQoJPGRpdiBpdGVtcHJvcD0ib2ZmZXJzIiBpdGVtc2NvcGU9IiIgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL09mZmVyIj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlQ3VycmVuY3kiPlVTRDwvc3Bhbj4NCgkJPHNwYW4gaXRlbXByb3A9InByaWNlIj4xLjA4PC9zcGFuPg0KCQk8bGluayBocmVmPSJodHRwOi8vc2NoZW1hLm9yZy9JblN0b2NrIiBpdGVtcHJvcD0iYXZhaWxhYmlsaXR5Ii8+DQoJPC9kaXY+DQoNCg0KCTxkaXYgaXRlbXByb3A9ImFnZ3JlZ2F0ZVJhdGluZyIgaXRlbXNjb3BlPSIiIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9BZ2dyZWdhdGVSYXRpbmciPiANCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40LjQ8L3NwYW4+IHN0YXJzIA0KCQk8c3BhbiBpdGVtcHJvcD0icmF0aW5nQ291bnQiPjE0NTg8L3NwYW4+IHZvdGVzIA0KCTwvZGl2Pg0KDQo8L2Rpdj4NCg0KDQo8ZGl2IGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGhhcm1hY3kiPg0KCTxoMSBpdGVtcHJvcD0ibmFtZSI+QXJzdmlydHVhIE9ubGluZSBEcnVnIFN0b3JlLiBCZXN0IFByaWNlcyE8L2gxPg0KCTxwIGl0ZW1wcm9wPSJkZXNjcmlwdGlvbiI+UGhhcm1hY3kgR3VhcmFudGVlZCAtIFF1YWxpdHkgUHJvdGVjdHMhIFdlIHNoaXAgd2l0aCBFTVMsIEZlZEV4LCBVUFMsIGFuZCBvdGhlciEgRkRBIGFwcHJvdmVkIEhlYWx0aCBwcm9kdWN0ISBPbmx5IHRvZGF5IC0gdmlhZ3JhIGxvd2VzdCBwcmljZSE8L3A+DQoJPGFkZHJlc3MgaXRlbXByb3A9ImFkZHJlc3MiIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUG9zdGFsQWRkcmVzcyI+DQoJPHAgaXRlbXByb3A9InN0cmVldEFkZHJlc3MiPg0KCQkgICAgICAgIDE2OTMgcnVlIFNhaW50Lclkb3VhcmQNCgkJICAgICAgPC9wPg0KCTxzcGFuIGl0ZW1wcm9wPSJhZGRyZXNzTG9jYWxpdHkiPlRyb2lzIFJpdmllcmVzPC9zcGFuPiwNCgk8c3BhbiBpdGVtcHJvcD0iYWRkcmVzc1JlZ2lvbiI+UXVlYmVjPC9zcGFuPg0KCTxzcGFuIGl0ZW1wcm9wPSJwb3N0YWxDb2RlIj5HOUEgNVM4PC9zcGFuPiwNCgk8c3BhbiBpdGVtcHJvcD0iYWRkcmVzc0NvdW50cnkiPkNhbmFkYTwvc3Bhbj4NCgk8L2FkZHJlc3M+DQoJPHA+UGhvbmU6IDxzcGFuIGNvbnRlbnQ9IisxODE5MzgwOTU0MSIgaXRlbXByb3A9InRlbGVwaG9uZSI+ODE5LTM4MC05NTQxPC9zcGFuPjwvcD4NCgk8ZGl2IGl0ZW1wcm9wPSJhZ2dyZWdhdGVSYXRpbmciIGl0ZW1zY29wZT0iIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIj4NCgkJPHNwYW4gaXRlbXByb3A9InJhdGluZ1ZhbHVlIj40Ljk8L3NwYW4+IHN0YXJzIDxzcGFuIGl0ZW1wcm9wPSJyYXRpbmdDb3VudCI+MjEwNTwvc3Bhbj4gdm90ZXMNCgk8L2Rpdj4NCjwvZGl2Pg0KIjt9fQ==













